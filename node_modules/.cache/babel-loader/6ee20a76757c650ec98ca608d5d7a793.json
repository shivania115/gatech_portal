{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withErrorBoundary = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ErrorBoundaryFallbackComponent = require('./ErrorBoundaryFallbackComponent');\n\nvar _ErrorBoundaryFallbackComponent2 = _interopRequireDefault(_ErrorBoundaryFallbackComponent);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar babelPluginFlowReactPropTypes_proptype_ComponentType = require('react').babelPluginFlowReactPropTypes_proptype_ComponentType || require('prop-types').any;\n\nvar ErrorBoundary = function (_Component) {\n  _inherits(ErrorBoundary, _Component);\n\n  function ErrorBoundary() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ErrorBoundary.__proto__ || Object.getPrototypeOf(ErrorBoundary)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      error: null,\n      info: null\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: 'componentDidCatch',\n    value: function componentDidCatch(error, info) {\n      var onError = this.props.onError;\n\n      if (typeof onError === 'function') {\n        try {\n          onError.call(this, error, info ? info.componentStack : '');\n        } catch (ignoredError) {}\n      }\n\n      this.setState({\n        error: error,\n        info: info\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          FallbackComponent = _props.FallbackComponent;\n      var _state = this.state,\n          error = _state.error,\n          info = _state.info;\n\n      if (error !== null) {\n        return _react2.default.createElement(FallbackComponent, {\n          componentStack: info ? info.componentStack : '',\n          error: error\n        });\n      }\n\n      return children;\n    }\n  }]);\n\n  return ErrorBoundary;\n}(_react.Component);\n\nErrorBoundary.defaultProps = {\n  FallbackComponent: _ErrorBoundaryFallbackComponent2.default\n};\nErrorBoundary.propTypes = {\n  error: typeof Error === 'function' ? require('prop-types').instanceOf(Error) : require('prop-types').any,\n  info: require('prop-types').shape({\n    componentStack: require('prop-types').string.isRequired\n  })\n};\n\nvar withErrorBoundary = exports.withErrorBoundary = function withErrorBoundary(Component, FallbackComponent, onError) {\n  return function (props) {\n    return _react2.default.createElement(ErrorBoundary, {\n      FallbackComponent: FallbackComponent,\n      onError: onError\n    }, _react2.default.createElement(Component, props));\n  };\n};\n\nwithErrorBoundary.propTypes = babelPluginFlowReactPropTypes_proptype_ComponentType === require('prop-types').any ? {} : babelPluginFlowReactPropTypes_proptype_ComponentType;\nexports.default = ErrorBoundary;","map":null,"metadata":{},"sourceType":"script"}