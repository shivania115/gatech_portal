{"ast":null,"code":"import _objectWithoutProperties from \"/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/src/components/ComposableMap.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MapProvider } from \"./MapProvider\";\n\nvar ComposableMap = function ComposableMap(_ref) {\n  var _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 800 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 600 : _ref$height,\n      _ref$offsetX = _ref.offsetX,\n      offsetX = _ref$offsetX === void 0 ? 0 : _ref$offsetX,\n      _ref$offsetY = _ref.offsetY,\n      offsetY = _ref$offsetY === void 0 ? 0 : _ref$offsetY,\n      _ref$projection = _ref.projection,\n      projection = _ref$projection === void 0 ? \"geoEqualEarth\" : _ref$projection,\n      _ref$projectionConfig = _ref.projectionConfig,\n      projectionConfig = _ref$projectionConfig === void 0 ? {} : _ref$projectionConfig,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \"\" : _ref$className,\n      restProps = _objectWithoutProperties(_ref, [\"width\", \"height\", \"offsetX\", \"offsetY\", \"projection\", \"projectionConfig\", \"className\"]);\n\n  return React.createElement(MapProvider, {\n    width: width,\n    height: height,\n    offsetX: offsetX,\n    offsetY: offsetY,\n    projection: projection,\n    projectionConfig: projectionConfig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"svg\", Object.assign({\n    width: width,\n    height: height,\n    className: \"rsm-svg \".concat(className)\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nComposableMap.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  projection: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  projectionConfig: PropTypes.object,\n  className: PropTypes.string\n};\nexport default ComposableMap;","map":{"version":3,"sources":["/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/src/components/ComposableMap.js"],"names":["React","PropTypes","MapProvider","ComposableMap","width","height","offsetX","offsetY","projection","projectionConfig","className","restProps","propTypes","number","oneOfType","string","func","object"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAShB;AAAA,wBARJC,KAQI;AAAA,MARJA,KAQI,2BARI,GAQJ;AAAA,yBAPJC,MAOI;AAAA,MAPJA,MAOI,4BAPK,GAOL;AAAA,0BANJC,OAMI;AAAA,MANJA,OAMI,6BANM,CAMN;AAAA,0BALJC,OAKI;AAAA,MALJA,OAKI,6BALM,CAKN;AAAA,6BAJJC,UAII;AAAA,MAJJA,UAII,gCAJS,eAIT;AAAA,mCAHJC,gBAGI;AAAA,MAHJA,gBAGI,sCAHe,EAGf;AAAA,4BAFJC,SAEI;AAAA,MAFJA,SAEI,+BAFQ,EAER;AAAA,MADDC,SACC;;AACJ,SACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEP,KADT;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,gBAAgB,EAAEC,gBANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AACE,IAAA,KAAK,EAAEL,KADT;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,IAAA,SAAS,oBAAaK,SAAb;AAHX,KAIMC,SAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARF,CADF;AAiBD,CA3BD;;AA6BAR,aAAa,CAACS,SAAd,GAA0B;AACxBR,EAAAA,KAAK,EAAEH,SAAS,CAACY,MADO;AAExBR,EAAAA,MAAM,EAAEJ,SAAS,CAACY,MAFM;AAGxBL,EAAAA,UAAU,EAAEP,SAAS,CAACa,SAAV,CAAoB,CAC9Bb,SAAS,CAACc,MADoB,EAE9Bd,SAAS,CAACe,IAFoB,CAApB,CAHY;AAOxBP,EAAAA,gBAAgB,EAAER,SAAS,CAACgB,MAPJ;AAQxBP,EAAAA,SAAS,EAAET,SAAS,CAACc;AARG,CAA1B;AAWA,eAAeZ,aAAf","sourcesContent":["\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapProvider } from \"./MapProvider\"\n\nconst ComposableMap = ({\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0,\n  projection = \"geoEqualEarth\",\n  projectionConfig = {},\n  className = \"\",\n  ...restProps\n}) => {\n  return (\n    <MapProvider\n      width={width}\n      height={height}\n      offsetX={offsetX}\n      offsetY={offsetY}\n      projection={projection}\n      projectionConfig={projectionConfig}\n    >\n      <svg\n        width={width}\n        height={height}\n        className={`rsm-svg ${className}`}\n        {...restProps}\n      />\n    </MapProvider>\n  )\n}\n\nComposableMap.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default ComposableMap\n"]},"metadata":{},"sourceType":"module"}