{"ast":null,"code":"import _objectWithoutProperties from \"/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/src/components/Geographies.js\";\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MapContext } from \"./MapProvider\";\nimport useGeographies from \"./useGeographies\";\n\nvar Geographies = function Geographies(_ref) {\n  var geography = _ref.geography,\n      children = _ref.children,\n      parseGeographies = _ref.parseGeographies,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \"\" : _ref$className,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 400 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 300 : _ref$height,\n      restProps = _objectWithoutProperties(_ref, [\"geography\", \"children\", \"parseGeographies\", \"className\", \"width\", \"height\"]);\n\n  var _useContext = useContext(MapContext),\n      path = _useContext.path,\n      projection = _useContext.projection;\n\n  var _useGeographies = useGeographies({\n    geography: geography,\n    parseGeographies: parseGeographies\n  }),\n      geographies = _useGeographies.geographies;\n\n  return React.createElement(\"g\", Object.assign({\n    className: \"rsm-geographies \".concat(className),\n    width: width,\n    height: height\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), geographies && geographies.length > 0 && children({\n    geographies: geographies,\n    path: path,\n    projection: projection\n  }));\n};\n\nGeographies.propTypes = {\n  geography: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]),\n  children: PropTypes.func,\n  parseGeographies: PropTypes.func,\n  className: PropTypes.string\n};\nexport default Geographies;","map":{"version":3,"sources":["/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/src/components/Geographies.js"],"names":["React","useContext","PropTypes","MapContext","useGeographies","Geographies","geography","children","parseGeographies","className","width","height","restProps","path","projection","geographies","length","propTypes","oneOfType","string","object","array","func"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAQd;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,gBAKI,QALJA,gBAKI;AAAA,4BAJJC,SAII;AAAA,MAJJA,SAII,+BAJQ,EAIR;AAAA,wBAHJC,KAGI;AAAA,MAHJA,KAGI,2BAHI,GAGJ;AAAA,yBAFJC,MAEI;AAAA,MAFJA,MAEI,4BAFK,GAEL;AAAA,MADDC,SACC;;AAAA,oBACyBX,UAAU,CAACE,UAAD,CADnC;AAAA,MACIU,IADJ,eACIA,IADJ;AAAA,MACUC,UADV,eACUA,UADV;;AAAA,wBAEoBV,cAAc,CAAC;AAAEE,IAAAA,SAAS,EAATA,SAAF;AAAaE,IAAAA,gBAAgB,EAAhBA;AAAb,GAAD,CAFlC;AAAA,MAEIO,WAFJ,mBAEIA,WAFJ;;AAIJ,SACE;AAAG,IAAA,SAAS,4BAAqBN,SAArB,CAAZ;AACA,IAAA,KAAK,EAAEC,KADP;AAEA,IAAA,MAAM,EAAEC;AAFR,KAGIC,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKIG,WAAW,IAAIA,WAAW,CAACC,MAAZ,GAAqB,CAApC,IACAT,QAAQ,CAAC;AAAEQ,IAAAA,WAAW,EAAXA,WAAF;AAAeF,IAAAA,IAAI,EAAJA,IAAf;AAAqBC,IAAAA,UAAU,EAAVA;AAArB,GAAD,CANZ,CADF;AAWD,CAvBD;;AAyBAT,WAAW,CAACY,SAAZ,GAAwB;AACtBX,EAAAA,SAAS,EAAEJ,SAAS,CAACgB,SAAV,CAAoB,CAC7BhB,SAAS,CAACiB,MADmB,EAE7BjB,SAAS,CAACkB,MAFmB,EAG7BlB,SAAS,CAACmB,KAHmB,CAApB,CADW;AAMtBd,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,IANE;AAOtBd,EAAAA,gBAAgB,EAAEN,SAAS,CAACoB,IAPN;AAQtBb,EAAAA,SAAS,EAAEP,SAAS,CAACiB;AARC,CAAxB;AAWA,eAAed,WAAf","sourcesContent":["\nimport React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapContext } from \"./MapProvider\"\nimport useGeographies from \"./useGeographies\"\n\nconst Geographies = ({\n  geography,\n  children,\n  parseGeographies,\n  className = \"\",\n  width = 400,\n  height = 300,\n  ...restProps\n}) => {\n  const { path, projection } = useContext(MapContext)\n  const { geographies } = useGeographies({ geography, parseGeographies })\n\n  return (\n    <g className={`rsm-geographies ${className}`} \n    width={width}\n    height={height}\n    {...restProps}>\n      {\n        geographies && geographies.length > 0 &&\n        children({ geographies, path, projection })\n      }\n    </g>\n  )\n}\n\nGeographies.propTypes = {\n  geography: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  children: PropTypes.func,\n  parseGeographies: PropTypes.func,\n  className: PropTypes.string,\n}\n\nexport default Geographies\n"]},"metadata":{},"sourceType":"module"}