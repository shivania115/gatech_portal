{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lisasun/Documents/Dashboard/MondoDB/gatech_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lisasun/Documents/Dashboard/MondoDB/gatech_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/lisasun/Documents/Dashboard/MondoDB/gatech_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/lisasun/Documents/Dashboard/MondoDB/gatech_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/lisasun/Documents/Dashboard/MondoDB/gatech_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport React from \"react\";\nimport { items } from \"../stitch\";\n\nvar todoReducer = function todoReducer(state, _ref) {\n  var type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case \"setTodos\":\n      {\n        return _objectSpread({}, state, {\n          hasHadTodos: payload.todos.length > 0,\n          todos: payload.todos || []\n        });\n      }\n\n    case \"addTodo\":\n      {\n        var newTodo = _objectSpread({}, payload, {\n          checked: typeof payload.checked === \"boolean\" ? payload.checked : false\n        });\n\n        return _objectSpread({}, state, {\n          hasHadTodos: true,\n          todos: [].concat(_toConsumableArray(state.todos), [newTodo])\n        });\n      }\n\n    case \"removeTodo\":\n      {\n        var removeSpecifiedTodo = function removeSpecifiedTodo(todo) {\n          return todo.id !== payload.id;\n        };\n\n        return _objectSpread({}, state, {\n          todos: state.todos.filter(removeSpecifiedTodo)\n        });\n      }\n\n    case \"clearCompletedTodos\":\n      {\n        var isNotCompleted = function isNotCompleted(todo) {\n          return todo.checked !== true;\n        };\n\n        return _objectSpread({}, state, {\n          todos: state.todos.filter(isNotCompleted)\n        });\n      }\n\n    case \"clearTodos\":\n      {\n        return _objectSpread({}, state, {\n          todos: []\n        });\n      }\n\n    case \"setTodoStatus\":\n      {\n        var updateTodoStatus = function updateTodoStatus(todo) {\n          var isThisTodo = todo._id === payload.id;\n          return isThisTodo ? _objectSpread({}, todo, {\n            status: payload.status\n          }) : todo;\n        };\n\n        return _objectSpread({}, state, {\n          todos: state.todos.map(updateTodoStatus)\n        });\n      }\n\n    case \"completeAllTodos\":\n      {\n        return _objectSpread({}, state, {\n          todos: state.todos.map(function (todo) {\n            return _objectSpread({}, todo, {\n              checked: true\n            });\n          })\n        });\n      }\n\n    case \"toggleTodoStatus\":\n      {\n        var updateStatus = function updateStatus(todo) {\n          var isThisTodo = todo._id === payload.id;\n          return isThisTodo ? _objectSpread({}, todo, {\n            checked: !todo.checked\n          }) : todo;\n        };\n\n        return _objectSpread({}, state, {\n          todos: state.todos.map(updateStatus)\n        });\n      }\n\n    default:\n      {\n        console.error(\"Received invalid todo action type: \".concat(type));\n      }\n  }\n};\n\nexport function useTodoItems(userId) {\n  //\n  var _React$useReducer = React.useReducer(todoReducer, {\n    todos: []\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1]; // Todo Actions\n\n\n  var loadTodos =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var todos;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return items.find({}, {\n                limit: 1000\n              }).asArray();\n\n            case 2:\n              todos = _context.sent;\n              dispatch({\n                type: \"setTodos\",\n                payload: {\n                  todos: todos\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadTodos() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var addTodo =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(task) {\n      var todo, result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              todo = {\n                task: task,\n                owner_id: userId\n              };\n              _context2.next = 3;\n              return items.insertOne(todo);\n\n            case 3:\n              result = _context2.sent;\n              dispatch({\n                type: \"addTodo\",\n                payload: _objectSpread({}, todo, {\n                  _id: result.insertedId\n                })\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function addTodo(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var removeTodo =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(todoId) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return items.deleteOne({\n                _id: todoId\n              });\n\n            case 2:\n              dispatch({\n                type: \"removeTodo\",\n                payload: {\n                  id: todoId\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function removeTodo(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var clearTodos =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return items.deleteMany({});\n\n            case 2:\n              dispatch({\n                type: \"clearTodos\"\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function clearTodos() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var clearCompletedTodos =\n  /*#__PURE__*/\n  function () {\n    var _ref6 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return items.deleteMany({\n                checked: true\n              });\n\n            case 2:\n              dispatch({\n                type: \"clearCompletedTodos\"\n              });\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function clearCompletedTodos() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var setTodoCompletionStatus =\n  /*#__PURE__*/\n  function () {\n    var _ref7 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(todoId, status) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return items.updateOne({\n                _id: todoId\n              }, {\n                $set: {\n                  checked: status\n                }\n              }, {\n                returnNewDocument: true\n              });\n\n            case 2:\n              dispatch({\n                type: \"setTodoStatus\",\n                payload: {\n                  todoId: todoId,\n                  status: status\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function setTodoCompletionStatus(_x3, _x4) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var completeAllTodos =\n  /*#__PURE__*/\n  function () {\n    var _ref8 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return items.updateMany({\n                owner_id: userId\n              }, {\n                $set: {\n                  checked: true\n                }\n              });\n\n            case 2:\n              dispatch({\n                type: \"completeAllTodos\"\n              });\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function completeAllTodos() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var toggleTodoStatus =\n  /*#__PURE__*/\n  function () {\n    var _ref9 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8(todoId) {\n      var todo;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              todo = state.todos.find(function (t) {\n                return t._id === todoId;\n              });\n              _context8.next = 3;\n              return items.updateOne({\n                _id: todoId\n              }, {\n                $set: {\n                  checked: !todo.currentStatus\n                }\n              });\n\n            case 3:\n              dispatch({\n                type: \"toggleTodoStatus\",\n                payload: {\n                  id: todoId\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function toggleTodoStatus(_x5) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  React.useEffect(function () {\n    loadTodos();\n  }, []);\n  return {\n    items: state.todos,\n    hasHadTodos: state.hasHadTodos,\n    actions: {\n      addTodo: addTodo,\n      removeTodo: removeTodo,\n      setTodoCompletionStatus: setTodoCompletionStatus,\n      clearTodos: clearTodos,\n      clearCompletedTodos: clearCompletedTodos,\n      completeAllTodos: completeAllTodos,\n      toggleTodoStatus: toggleTodoStatus\n    }\n  };\n}","map":{"version":3,"sources":["/Users/lisasun/Documents/Dashboard/MondoDB/gatech_portal/src/components/useTodoItems.js"],"names":["React","items","todoReducer","state","type","payload","hasHadTodos","todos","length","newTodo","checked","removeSpecifiedTodo","todo","id","filter","isNotCompleted","updateTodoStatus","isThisTodo","_id","status","map","updateStatus","console","error","useTodoItems","userId","useReducer","dispatch","loadTodos","find","limit","asArray","addTodo","task","owner_id","insertOne","result","insertedId","removeTodo","todoId","deleteOne","clearTodos","deleteMany","clearCompletedTodos","setTodoCompletionStatus","updateOne","$set","returnNewDocument","completeAllTodos","updateMany","toggleTodoStatus","t","currentStatus","useEffect","actions"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { items } from \"../stitch\";\n\nconst todoReducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"setTodos\": {\n      return {\n        ...state,\n        hasHadTodos: payload.todos.length > 0,\n        todos: payload.todos || [],\n      };\n    }\n    case \"addTodo\": {\n      const newTodo = {\n        ...payload,\n        checked: typeof payload.checked === \"boolean\" ? payload.checked : false,\n      };\n      return {\n        ...state,\n        hasHadTodos: true,\n        todos: [...state.todos, newTodo],\n      };\n    }\n    case \"removeTodo\": {\n      const removeSpecifiedTodo = todo => todo.id !== payload.id;\n      return {\n        ...state,\n        todos: state.todos.filter(removeSpecifiedTodo),\n      };\n    }\n    case \"clearCompletedTodos\": {\n      const isNotCompleted = todo => todo.checked !== true;\n      return {\n        ...state,\n        todos: state.todos.filter(isNotCompleted),\n      };\n    }\n    case \"clearTodos\": {\n      return { ...state, todos: [] };\n    }\n    case \"setTodoStatus\": {\n      const updateTodoStatus = todo => {\n        const isThisTodo = todo._id === payload.id;\n        return isThisTodo ? { ...todo, status: payload.status } : todo;\n      };\n      return {\n        ...state,\n        todos: state.todos.map(updateTodoStatus),\n      };\n    }\n    case \"completeAllTodos\": {\n      return {\n        ...state,\n        todos: state.todos.map(todo => ({ ...todo, checked: true })),\n      };\n    }\n    case \"toggleTodoStatus\": {\n      const updateStatus = todo => {\n        const isThisTodo = todo._id === payload.id;\n        return isThisTodo ? { ...todo, checked: !todo.checked } : todo;\n      };\n      return {\n        ...state,\n        todos: state.todos.map(updateStatus),\n      };\n    }\n    default: {\n      console.error(`Received invalid todo action type: ${type}`);\n    }\n  }\n};\n\nexport function useTodoItems(userId) {\n  //\n  const [state, dispatch] = React.useReducer(todoReducer, { todos: [] });\n  // Todo Actions\n  const loadTodos = async () => {\n    const todos = await items.find({}, { limit: 1000 }).asArray();\n    dispatch({ type: \"setTodos\", payload: { todos } });\n  };\n  const addTodo = async task => {\n    const todo = { task, owner_id: userId };\n    const result = await items.insertOne(todo);\n    dispatch({ type: \"addTodo\", payload: { ...todo, _id: result.insertedId } });\n  };\n  const removeTodo = async todoId => {\n    await items.deleteOne({ _id: todoId });\n    dispatch({ type: \"removeTodo\", payload: { id: todoId } });\n  };\n  const clearTodos = async () => {\n    await items.deleteMany({});\n    dispatch({ type: \"clearTodos\" });\n  };\n  const clearCompletedTodos = async () => {\n    await items.deleteMany({ checked: true });\n    dispatch({ type: \"clearCompletedTodos\" });\n  };\n  const setTodoCompletionStatus = async (todoId, status) => {\n    await items.updateOne(\n      { _id: todoId },\n      { $set: { checked: status } },\n      { returnNewDocument: true },\n    );\n    dispatch({ type: \"setTodoStatus\", payload: { todoId, status } });\n  };\n  const completeAllTodos = async () => {\n    await items.updateMany({ owner_id: userId }, { $set: { checked: true } });\n    dispatch({ type: \"completeAllTodos\" });\n  };\n  const toggleTodoStatus = async todoId => {\n    const todo = state.todos.find(t => t._id === todoId);\n    await items.updateOne(\n      { _id: todoId },\n      { $set: { checked: !todo.currentStatus } },\n    );\n    dispatch({ type: \"toggleTodoStatus\", payload: { id: todoId } });\n  };\n\n  React.useEffect(() => {\n    loadTodos();\n  }, []);\n  return {\n    items: state.todos,\n    hasHadTodos: state.hasHadTodos,\n    actions: {\n      addTodo,\n      removeTodo,\n      setTodoCompletionStatus,\n      clearTodos,\n      clearCompletedTodos,\n      completeAllTodos,\n      toggleTodoStatus,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}