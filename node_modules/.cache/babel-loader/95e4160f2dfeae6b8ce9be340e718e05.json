{"ast":null,"code":"import _slicedToArray from \"/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/src/components/MapProvider.js\";\nimport React, { createContext, useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3Geo from \"d3-geo\";\n\nvar geoPath = d3Geo.geoPath,\n    projections = _objectWithoutProperties(d3Geo, [\"geoPath\"]);\n\nvar MapContext = createContext();\n\nvar makeProjection = function makeProjection(_ref) {\n  var _ref$projectionConfig = _ref.projectionConfig,\n      projectionConfig = _ref$projectionConfig === void 0 ? {} : _ref$projectionConfig,\n      _ref$projection = _ref.projection,\n      projection = _ref$projection === void 0 ? \"geoEqualEarth\" : _ref$projection,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 800 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 600 : _ref$height,\n      _ref$offsetX = _ref.offsetX,\n      offsetX = _ref$offsetX === void 0 ? 0 : _ref$offsetX,\n      _ref$offsetY = _ref.offsetY,\n      offsetY = _ref$offsetY === void 0 ? 0 : _ref$offsetY;\n  var isFunc = typeof projection === \"function\";\n  if (isFunc) return projection;\n  var scl = projectionConfig.scale || null;\n  var proj = projections[projection]().translate([width / 2 + offsetX * scl / 1000, height / 2 + offsetY * scl / 1000]);\n  var supported = [proj.center ? \"center\" : null, proj.rotate ? \"rotate\" : null, proj.scale ? \"scale\" : null, proj.parallels ? \"parallels\" : null];\n  supported.forEach(function (d) {\n    if (!d) return;\n    proj = proj[d](projectionConfig[d] || proj[d]());\n  });\n  return proj;\n};\n\nvar MapProvider = function MapProvider(_ref2) {\n  var width = _ref2.width,\n      height = _ref2.height,\n      offsetX = _ref2.offsetX,\n      offsetY = _ref2.offsetY,\n      projection = _ref2.projection,\n      projectionConfig = _ref2.projectionConfig,\n      restProps = _objectWithoutProperties(_ref2, [\"width\", \"height\", \"offsetX\", \"offsetY\", \"projection\", \"projectionConfig\"]);\n\n  var _ref3 = projectionConfig.center || [],\n      _ref4 = _slicedToArray(_ref3, 2),\n      cx = _ref4[0],\n      cy = _ref4[1];\n\n  var _ref5 = projectionConfig.rotate || [],\n      _ref6 = _slicedToArray(_ref5, 3),\n      rx = _ref6[0],\n      ry = _ref6[1],\n      rz = _ref6[2];\n\n  var _ref7 = projectionConfig.parallels || [],\n      _ref8 = _slicedToArray(_ref7, 2),\n      p1 = _ref8[0],\n      p2 = _ref8[1];\n\n  var s = projectionConfig.scale || null;\n  var projMemo = useMemo(function () {\n    return makeProjection({\n      projectionConfig: {\n        center: cx || cx === 0 || cy || cy === 0 ? [cx, cy] : null,\n        rotate: rx || rx === 0 || ry || ry === 0 ? [rx, ry, rz] : null,\n        parallels: p1 || p1 === 0 || p2 || p2 === 0 ? [p1, p2] : null,\n        scale: s\n      },\n      projection: projection,\n      width: width,\n      height: height,\n      offsetX: offsetX,\n      offsetY: offsetY\n    });\n  }, [width, height, projection, cx, cy, rx, ry, rz, p1, p2, s, offsetX, offsetY]);\n  var proj = useCallback(projMemo, [projMemo]);\n  var value = useMemo(function () {\n    return {\n      width: width,\n      height: height,\n      projection: proj,\n      path: geoPath().projection(proj).rotate([84 + 30 / 60, 0])\n    };\n  }, [width, height, proj]);\n  return React.createElement(MapContext.Provider, Object.assign({\n    value: value\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};\n\nMapProvider.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  offsetX: PropTypes.number,\n  offsetY: PropTypes.number,\n  projection: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  projectionConfig: PropTypes.object\n};\nexport { MapProvider, MapContext };","map":{"version":3,"sources":["/Users/lisasun/Documents/Dashboard/MondoDB/portal_new/stitch-tutorial-todo-web/src/components/MapProvider.js"],"names":["React","createContext","useMemo","useCallback","PropTypes","d3Geo","geoPath","projections","MapContext","makeProjection","projectionConfig","projection","width","height","offsetX","offsetY","isFunc","scl","scale","proj","translate","supported","center","rotate","parallels","forEach","d","MapProvider","restProps","cx","cy","rx","ry","rz","p1","p2","s","projMemo","value","path","propTypes","number","oneOfType","string","func","object"],"mappings":"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","sourcesContent":["\nimport React, {\n  createContext,\n  useMemo,\n  useCallback,\n} from \"react\"\nimport PropTypes from \"prop-types\"\nimport * as d3Geo from \"d3-geo\"\n\nconst { geoPath, ...projections } = d3Geo\n\nconst MapContext = createContext()\n\nconst makeProjection = ({\n  projectionConfig = {},\n  projection = \"geoEqualEarth\",\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0\n}) => {\n  const isFunc = typeof projection === \"function\"\n\n  if (isFunc) return projection\n\n  const scl = projectionConfig.scale || null;\n\n  let proj = projections[projection]().translate([width/2 + (offsetX)*scl/1000 ,\n                                              height/2 + (offsetY)*scl/1000]);\n\n  const supported = [\n    proj.center ? \"center\" : null,\n    proj.rotate ? \"rotate\" : null,\n    proj.scale ? \"scale\" : null,\n    proj.parallels ? \"parallels\" : null,\n  ]\n\n  supported.forEach(d => {\n    if (!d) return\n    proj = proj[d](projectionConfig[d] || proj[d]())\n  })\n\n  return proj\n}\n\nconst MapProvider = ({\n  width,\n  height,\n  offsetX,\n  offsetY,\n  projection,\n  projectionConfig,\n  ...restProps\n}) => {\n  const [cx, cy] = projectionConfig.center || []\n  const [rx, ry, rz] = projectionConfig.rotate || []\n  const [p1, p2] = projectionConfig.parallels || []\n  const s = projectionConfig.scale || null\n\n  const projMemo = useMemo(() => {\n    return makeProjection({\n      projectionConfig: {\n        center: (cx || cx === 0) || (cy || cy === 0) ? [cx, cy] : null,\n        rotate: (rx || rx === 0) || (ry || ry === 0) ? [rx, ry, rz] : null,\n        parallels: (p1 || p1 === 0) || (p2 || p2 === 0) ? [p1, p2] : null,\n        scale: s,\n      },\n      projection,\n      width,\n      height,\n      offsetX,\n      offsetY,\n    })\n  }, [ width, height, projection, cx, cy, rx, ry, rz, p1, p2, s, offsetX, offsetY ])\n\n  const proj = useCallback(projMemo, [projMemo])\n\n  const value = useMemo(() => {\n    return {\n      width,\n      height,\n      projection: proj,\n      path: geoPath().projection(proj).rotate([84 + 30 / 60, 0]),\n    }\n  }, [ width, height, proj ])\n\n  return (<MapContext.Provider value={value} {...restProps} />)\n}\n\nMapProvider.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  offsetX: PropTypes.number,\n  offsetY: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n}\n\nexport { MapProvider, MapContext }\n"]},"metadata":{},"sourceType":"module"}