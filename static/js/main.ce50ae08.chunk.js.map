{"version":3,"sources":["components/MapProvider.js","components/utils.js","components/useGeographies.js","components/Geographies.js","components/Geography.js","components/ComposableMap.js","components/GADMProvider.js","stitch/app.js","stitch/authentication.js","components/StitchAuth.js","components/GAMap.js","stitch/mongodb.js","components/GADiabetes.js","components/App.js","index.js"],"names":["geoPath","d3Geo","projections","MapContext","createContext","MapProvider","_ref2","width","height","offsetX","offsetY","projection","projectionConfig","restProps","Object","objectWithoutProperties","_ref3","center","_ref4","slicedToArray","cx","cy","_ref5","rotate","_ref6","rx","ry","rz","_ref7","parallels","_ref8","p1","p2","s","scale","projMemo","useMemo","_ref","_ref$projectionConfig","_ref$projection","_ref$width","_ref$height","_ref$offsetX","_ref$offsetY","scl","proj","translate","forEach","d","makeProjection","useCallback","value","path","react_default","a","createElement","Provider","assign","getFeatures","geographies","parseGeographies","Array","isArray","feats","feature","objects","keys","features","console","log","useGeographies","geography","useContext","_useState","useState","_useState2","setGeographies","useEffect","url","window","fetch","then","res","ok","Error","statusText","json","catch","error","geos","map","i","objectSpread","rsmKey","concat","svgPath","prepareFeatures","Geographies","children","_ref$className","className","_useContext","length","memo","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","onFocus","onBlur","_ref$style","style","isPressed","setPressed","_useState3","_useState4","isFocused","setFocus","tabIndex","evt","ComposableMap","MapProvider_MapProvider","GADMContext","React","useGADM","context","GADMProvider","props","_React$useState","selectedTable","tableName","qryName","selectedVariable","varName","printName","unit","selectedCounty","NAME","GEOID","fetchedData","_React$useState2","pageState","setPageState","handlePageStateChange","doc","pageInfo","firstRender","actions","app","Stitch","hasAppClient","getAppClient","initializeAppClient","loginAnonymous","credential","AnonymousCredential","auth","loginWithCredential","getCurrentUser","isLoggedIn","user","logoutCurrentUser","logoutUserWithId","id","StitchAuthContext","useStitchAuth","StitchAuthProvider","currentUser","authState","setAuthState","handleAnonymousLogin","asyncToGenerator","regenerator_default","mark","_callee","loggedInUser","wrap","_context","prev","next","sent","stop","apply","this","arguments","handleLogout","_callee2","_context2","authInfo","geoUrl","GAMap","hover","setHover","hoverCounty","setHoverCounty","_useState5","_useState6","toolTipVal","setToolTipVal","_useGADM","colorPalette","_useState7","_useState8","mapColor","setMapColor","_useState9","_useState10","legendSplit","setLegendSplit","_useState11","_useState12","legendMin","setLegendMin","_useState13","_useState14","legendMax","setLegendMax","statedata","_","filter","subsubgroup","varData","number","Math","min","toConsumableArray","toFixed","max","scaler","scaleQuantile","domain","range","scaleMap","item","county","quantiles","classes","makeStyles","theme","customSize","position","top","left","fontSize","padding","useStyles","ttval","sp","split","undefined","parseFloat","MinVal","MaxVal","x","y","transform","splitpoint","key","color","fill","strokeWidth","stroke","Legend","Tooltip","placement","open","tooltip","title","components_ComposableMap","data-tip","components_Geographies","geo","components_Geography","onClick","properties","gatech","getServiceClient","RemoteMongoClient","factory","db","collection","DetTable","categories","count","setCount","stateAvg","setStateAvg","countArray","sortBy","reject","subgroup","i1","byGroup","groupBy","resultArray","mean","meanBy","o","push","GetValue","zipped","obj","index","val","Table","Row","active","Cell","verticalAlign","textAlign","paddingLeft","paddingRight","Body","MenuButton","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","_React$createElement5","_React$createElement6","_useGADM2","qryname","setQryname","qry","cat","Dropdown","Item","Grid","Column","Menu","vertical","tabular","openOnFocus","pointing","closeOnBlur","text","lineHeight","direction","toString","defineProperty","MenuPanel","Header","as","fontWeight","paddingTop","display","DataPanel","desc","setDesc","source","setSource","_useGADM4","fetchData","prom","find","toArray","Subheader","columns","block","backgroundColor","paddingBottom","border","borderRadius","selectable","basic","fixed","HeaderCell","borderTop","MapPanel","_useGADM5","margin","GADiabetes","Warning","setWarning","userWidth","setUserWidth","wid","document","root","documentElement","body","innerWidth","clientWidth","Container","centered","background","List","size","Icon","name","Divider","Alert","severity","AlertTitle","AppUI","_useStitchAuth","_useStitchAuth$action","rootElement","getElementById","ReactDOM","render"],"mappings":"6QASQA,EAA4BC,IAAhBC,cAAgBD,eAE9BE,EAAaC,0BAmCbC,EAAc,SAAAC,GAQd,IAPJC,EAOID,EAPJC,MACAC,EAMIF,EANJE,OACAC,EAKIH,EALJG,QACAC,EAIIJ,EAJJI,QACAC,EAGIL,EAHJK,WACAC,EAEIN,EAFJM,iBACGC,EACCC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,wEAAAU,EACaJ,EAAiBK,QAAU,GADxCC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAE,EAAA,GACGI,EADHF,EAAA,GACOG,EADPH,EAAA,GAAAI,EAEiBV,EAAiBW,QAAU,GAF5CC,EAAAV,OAAAK,EAAA,EAAAL,CAAAQ,EAAA,GAEGG,EAFHD,EAAA,GAEOE,EAFPF,EAAA,GAEWG,EAFXH,EAAA,GAAAI,EAGahB,EAAiBiB,WAAa,GAH3CC,EAAAhB,OAAAK,EAAA,EAAAL,CAAAc,EAAA,GAGGG,EAHHD,EAAA,GAGOE,EAHPF,EAAA,GAIEG,EAAIrB,EAAiBsB,OAAS,KAE9BC,EAAWC,kBAAQ,WACvB,OAhDmB,SAAAC,GAOjB,IAAAC,EAAAD,EANJzB,wBAMI,IAAA0B,EANe,GAMfA,EAAAC,EAAAF,EALJ1B,kBAKI,IAAA4B,EALS,gBAKTA,EAAAC,EAAAH,EAJJ9B,aAII,IAAAiC,EAJI,IAIJA,EAAAC,EAAAJ,EAHJ7B,cAGI,IAAAiC,EAHK,IAGLA,EAAAC,EAAAL,EAFJ5B,eAEI,IAAAiC,EAFM,EAENA,EAAAC,EAAAN,EADJ3B,eACI,IAAAiC,EADM,EACNA,EAGJ,GAFqC,oBAAfhC,EAEV,OAAOA,EAEnB,IAAMiC,EAAMhC,EAAiBsB,OAAS,KAIlCW,EAAO3C,EAAYS,KAAcmC,UAAU,CAACvC,EAAM,EAAKE,EAASmC,EAAI,IAAMpC,EAAUE,EAASkC,EAAI,MAAOrB,OAAO,CAAC,GAAK,GAAK,IAAK,KAAKW,MAAM,KAc9I,MAZkB,CAChBW,EAAK5B,OAAS,SAAW,KACzB4B,EAAKtB,OAAS,SAAW,KACzBsB,EAAKX,MAAQ,QAAU,KACvBW,EAAKhB,UAAY,YAAc,MAGvBkB,QAAQ,SAAAC,GACXA,IACLH,EAAOA,EAAKG,GAAGpC,EAAiBoC,IAAMH,EAAKG,SAGtCH,EAkBEI,CAAe,CACpBrC,iBAAkB,CAChBK,OAASG,GAAa,IAAPA,GAAcC,GAAa,IAAPA,EAAY,CAACD,EAAIC,GAAM,KAC1DE,OAASE,GAAa,IAAPA,GAAcC,GAAa,IAAPA,EAAY,CAACD,EAAIC,EAAIC,GAAM,KAC9DE,UAAYE,GAAa,IAAPA,GAAcC,GAAa,IAAPA,EAAY,CAACD,EAAIC,GAAM,KAC7DE,MAAOD,GAETtB,aACAJ,QACAC,SACAC,UACAC,aAED,CAAEH,EAAOC,EAAQG,EAAYS,EAAIC,EAAII,EAAIC,EAAIC,EAAII,EAAIC,EAAIC,EAAGxB,EAASC,IAElEmC,EAAOK,sBAAYf,EAAU,CAACA,IAE9BgB,EAAQf,kBAAQ,WACpB,MAAO,CACL7B,QACAC,SACAG,WAAYkC,EACZO,KAAMpD,IAAUW,WAAWkC,KAE5B,CAAEtC,EAAOC,EAAQqC,IAEpB,OAAQQ,EAAAC,EAAAC,cAACpD,EAAWqD,SAAZ1C,OAAA2C,OAAA,CAAqBN,MAAOA,GAAWtC,sBClE1C,SAAS6C,EAAYC,EAAaC,GACvC,GAAIC,MAAMC,QAAQH,GAAc,OAAOC,EAAmBA,EAAiBD,GAAeA,EAC1F,IAAMI,EAAQC,YACZL,EACAA,EAAYM,QAAQnD,OAAOoD,KAAKP,EAAYM,SAAS,KACrDE,SAEF,OADAC,QAAQC,IAAIV,EAAYM,QAAQnD,OAAOoD,KAAKP,EAAYM,SAAS,KAC1DL,EAAmBA,EAAiBG,GAASA,ECtBvC,SAASO,EAATjC,GAAyD,IAA/BkC,EAA+BlC,EAA/BkC,UAAWX,EAAoBvB,EAApBuB,iBAC1CR,EAASoB,qBAAWrE,GAApBiD,KAD8DqB,EAEhCC,qBAFgCC,EAAA7D,OAAAK,EAAA,EAAAL,CAAA2D,EAAA,GAE/Dd,EAF+DgB,EAAA,GAElDC,EAFkDD,EAAA,GAoBtE,OAhBAE,oBAAU,WDDL,IAA0BC,ECEzB,qBAAOC,SDqCuC,kBCnCrCR,GDJgBO,ECKVP,EDJdS,MAAMF,GACVG,KAAK,SAAAC,GACJ,IAAKA,EAAIC,GACP,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,EAAII,SACVC,MAAM,SAAAC,GACPpB,QAAQC,IAAI,+CAAgDmB,MCHhCP,KAAK,SAAAQ,GAC3BA,GAAMb,EAAelB,EAAY+B,EAAM7B,MAG7CgB,EAAelB,EAAYa,EAAWX,MAEvC,CAACW,EAAWX,IAMR,CAAED,YAJMvB,kBAAQ,WACrB,ODQG,SAAyBuB,EAAaP,GAC3C,OAAOO,EAAcA,EAAY+B,IAAI,SAAC1C,EAAG2C,GACvC,OAAO7E,OAAA8E,EAAA,EAAA9E,CAAA,GACFkC,EADL,CAEE6C,OAAM,OAAAC,OAASH,GACfI,QAAS3C,EAAKJ,OAEb,GCfIgD,CAAgBrC,EAAaP,IACnC,CAACO,EAAaP,KCjBnB,IAiCe6C,EAjCK,SAAA5D,GAMd,IALJkC,EAKIlC,EALJkC,UACA2B,EAII7D,EAJJ6D,SACAtC,EAGIvB,EAHJuB,iBAGIuC,EAAA9D,EAFJ+D,iBAEI,IAAAD,EAFQ,GAERA,EADDtF,EACCC,OAAAC,EAAA,EAAAD,CAAAuB,EAAA,yDAAAgE,EACyB7B,qBAAWrE,GAAhCiD,EADJiD,EACIjD,KAAMzC,EADV0F,EACU1F,WACNgD,EAAgBW,EAAe,CAAEC,YAAWX,qBAA5CD,YAER,OACEN,EAAAC,EAAAC,cAAA,IAAAzC,OAAA2C,OAAA,CAAG2C,UAAS,mBAAAN,OAAqBM,GACjC5F,OAAQ,KACJK,GAEA8C,GAAeA,EAAY2C,OAAS,GACpCJ,EAAS,CAAEvC,cAAaP,OAAMzC,iBCyDvB4F,iBA5EG,SAAAlE,GAWZ,IAVJkC,EAUIlC,EAVJkC,UACAiC,EASInE,EATJmE,aACAC,EAQIpE,EARJoE,aACAC,EAOIrE,EAPJqE,YACAC,EAMItE,EANJsE,UACAC,EAKIvE,EALJuE,QACAC,EAIIxE,EAJJwE,OAIIC,EAAAzE,EAHJ0E,aAGI,IAAAD,EAHI,GAGJA,EAAAX,EAAA9D,EAFJ+D,iBAEI,IAAAD,EAFQ,GAERA,EADDtF,EACCC,OAAAC,EAAA,EAAAD,CAAAuB,EAAA,8GAAAoC,EAC4BC,oBAAS,GADrCC,EAAA7D,OAAAK,EAAA,EAAAL,CAAA2D,EAAA,GACGuC,EADHrC,EAAA,GACcsC,EADdtC,EAAA,GAAAuC,EAE0BxC,oBAAS,GAFnCyC,EAAArG,OAAAK,EAAA,EAAAL,CAAAoG,EAAA,GAEGE,EAFHD,EAAA,GAEcE,EAFdF,EAAA,GAoCJ,OACE9D,EAAAC,EAAAC,cAAA,OAAAzC,OAAA2C,OAAA,CACE6D,SAAS,IACTlB,UAAS,iBAAAN,OAAmBM,GAC5BpD,EAAGuB,EAAUwB,QACbS,aArCJ,SAA0Be,GACxBF,GAAS,GACLb,GAAcA,EAAae,IAoC7Bd,aAjCJ,SAA0Bc,GACxBF,GAAS,GACLL,GAAWC,GAAW,GACtBR,GAAcA,EAAac,IA+B7BX,QA5BJ,SAAqBW,GACnBF,GAAS,GACLT,GAASA,EAAQW,IA2BnBV,OAxBJ,SAAoBU,GAClBF,GAAS,GACLL,GAAWC,GAAW,GACtBJ,GAAQA,EAAOU,IAsBjBb,YAnBJ,SAAyBa,GACvBN,GAAW,GACPP,GAAaA,EAAYa,IAkB3BZ,UAfJ,SAAuBY,GACrBN,GAAW,GACPN,GAAWA,EAAUY,IAcvBR,MAAOA,EAAMC,GAAaI,EAAaJ,EAAY,UAAY,QAAW,YACtEnG,MCjBK2G,EAxCO,SAAAnF,GAShB,IAAAG,EAAAH,EARJ9B,aAQI,IAAAiC,EARI,IAQJA,EAAAC,EAAAJ,EAPJ7B,cAOI,IAAAiC,EAPK,IAOLA,EAAAC,EAAAL,EANJ5B,eAMI,IAAAiC,EANM,EAMNA,EAAAC,EAAAN,EALJ3B,eAKI,IAAAiC,EALM,EAKNA,EAAAJ,EAAAF,EAJJ1B,kBAII,IAAA4B,EAJS,gBAITA,EAAAD,EAAAD,EAHJzB,wBAGI,IAAA0B,EAHe,GAGfA,EAAA6D,EAAA9D,EAFJ+D,iBAEI,IAAAD,EAFQ,GAERA,EADDtF,EACCC,OAAAC,EAAA,EAAAD,CAAAuB,EAAA,oFACJ,OACEgB,EAAAC,EAAAC,cAACkE,EAAD,CACElH,MAAOA,EACPC,OAAQA,EACRC,QAASA,EACTC,QAASA,EACTC,WAAYA,EACZC,iBAAkBA,GAElByC,EAAAC,EAAAC,cAAA,MAAAzC,OAAA2C,OAAA,CACElD,MAAOA,EACPC,OAAQA,EACR4F,UAAS,WAAAN,OAAaM,IAClBvF,eC1BN6G,EAAcC,IAAMvH,gBAGnB,SAASwH,IACd,IAAMC,EAAUF,IAAMnD,WAAWkD,GACjC,IAAKG,EACH,MAAM,IAAIzC,MAAJ,8CAER,OAAOyC,EAKF,SAASC,EAAaC,GAAO,IAAAC,EAEAL,IAAMjD,SAAS,CAC/CuD,cAAe,CAACC,UAAW,0BAA0BC,QAAS,2BAC9DC,iBAAkB,CAACC,QAAW,oBAAqBC,UAAa,qBAAsBC,KAAQ,OAC9FC,eAAgB,CAACC,KAAM,SAAUC,MAAO,SACxCC,YAAY,KANoBC,EAAA9H,OAAAK,EAAA,EAAAL,CAAAkH,EAAA,GAE3Ba,EAF2BD,EAAA,GAEhBE,EAFgBF,EAAA,GAS5BG,EAAwB,SAACC,GAC7BF,EAAahI,OAAA8E,EAAA,EAAA9E,CAAA,GAAI+H,EAAcG,KAK3BC,EAAWtB,IAAMvF,QACrB,WAAM,IACI6F,EAA8EY,EAA9EZ,cAAeG,EAA+DS,EAA/DT,iBAAkBI,EAA6CK,EAA7CL,eAAgBG,EAA6BE,EAA7BF,YAA6BE,EAAhBK,YAQtE,MAPc,CACZjB,gBACAG,mBACAI,iBACAG,cACAQ,QAAS,CAAEJ,2BAIf,CAACF,IAEH,OACExF,EAAAC,EAAAC,cAACmE,EAAYlE,SAAb,CAAsBL,MAAO8F,GAC1BlB,EAAM7B,sBCzCPkD,EAAMC,IAAOC,aAHJ,cAIXD,IAAOE,aAJI,cAKXF,IAAOG,oBALI,cCAR,SAASC,IAEd,IAAMC,EAAa,IAAIC,IACvB,OAAOP,EAAIQ,KAAKC,oBAAoBH,GAQ/B,SAASI,IAEd,OAAOV,EAAIQ,KAAKG,WAAaX,EAAIQ,KAAKI,KAAO,KAGxC,SAASC,IAEd,IAAMD,EAAOF,IACb,OAAOV,EAAIQ,KAAKM,iBAAiBF,EAAKG,ICXxC,IAAMC,EAAoBzC,IAAMvH,gBAGzB,SAASiK,IACd,IAAMxC,EAAUF,IAAMnD,WAAW4F,GACjC,IAAKvC,EACH,MAAM,IAAIzC,MAAJ,0DAER,OAAOyC,EAKF,SAASyC,EAAmBvC,GAAO,IAAAC,EACNL,IAAMjD,SAAS,CAC/CqF,WDfKX,EAAIQ,KAAKG,WCgBdQ,YAAaT,MAHyBlB,EAAA9H,OAAAK,EAAA,EAAAL,CAAAkH,EAAA,GACjCwC,EADiC5B,EAAA,GACtB6B,EADsB7B,EAAA,GAOlC8B,EAAoB,eAAArI,EAAAvB,OAAA6J,EAAA,EAAA7J,CAAA8J,EAAAtH,EAAAuH,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAtH,EAAA0H,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACJX,EAAfT,WADmB,CAAAkB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGE1B,IAHF,OAGnBsB,EAHmBE,EAAAG,KAIzBX,EAAa3J,OAAA8E,EAAA,EAAA9E,CAAA,GACR0J,EADO,CAEVT,YAAY,EACZQ,YAAaQ,KAPU,wBAAAE,EAAAI,SAAAP,MAAH,yBAAAzI,EAAAiJ,MAAAC,KAAAC,YAAA,GAWpBC,EAAY,eAAAnL,EAAAQ,OAAA6J,EAAA,EAAA7J,CAAA8J,EAAAtH,EAAAuH,KAAG,SAAAa,IAAA,OAAAd,EAAAtH,EAAA0H,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,WACIX,EAAfT,WADW,CAAA4B,EAAAR,KAAA,eAAAQ,EAAAR,KAAA,EAGXlB,IAHW,OAIjBQ,EAAa3J,OAAA8E,EAAA,EAAA9E,CAAA,GACR0J,EADO,CAEVT,YAAY,EACZQ,YAAa,QAPEoB,EAAAR,KAAA,eAUjB/G,QAAQC,IAAR,gDAViB,wBAAAsH,EAAAN,SAAAK,MAAH,yBAAApL,EAAAgL,MAAAC,KAAAC,YAAA,GAeZI,EAAWjE,IAAMvF,QACrB,WAOE,MALc,CACZ2H,WAFkCS,EAA5BT,WAGNQ,YAHkCC,EAAhBD,YAIlBpB,QAAS,CAAEuB,uBAAsBe,kBAIrC,CAACjB,EAAUT,aAEb,OACE1G,EAAAC,EAAAC,cAAC6G,EAAkB5G,SAAnB,CAA4BL,MAAOyI,GAChC7D,EAAM7B,wDC1DP2F,EAAQ,gHAGC,SAASC,EAAM/D,GAAO,IAAAtD,EACTC,mBAAS,GADAC,EAAA7D,OAAAK,EAAA,EAAAL,CAAA2D,EAAA,GAC5BsH,EAD4BpH,EAAA,GACrBqH,EADqBrH,EAAA,GAAAuC,EAEGxC,mBAAS,iBAFZyC,EAAArG,OAAAK,EAAA,EAAAL,CAAAoG,EAAA,GAE5B+E,EAF4B9E,EAAA,GAEf+E,EAFe/E,EAAA,GAAAgF,EAGCzH,mBAAS,MAHV0H,EAAAtL,OAAAK,EAAA,EAAAL,CAAAqL,EAAA,GAG5BE,EAH4BD,EAAA,GAGhBE,EAHgBF,EAAA,GAAAG,EAQG3E,IAJ/BQ,EAJ4BmE,EAI5BnE,iBAELI,GANiC+D,EAKjCtE,cALiCsE,EAMjC/D,gBACAG,EAPiC4D,EAOjC5D,YACUI,EARuBwD,EAQjCpD,QAAUJ,sBAmBNyD,EAAe,CACnB,UACA,UACA,UACA,UACA,UACA,WAjCiCC,EAoCH/H,mBAAS,GApCNgI,EAAA5L,OAAAK,EAAA,EAAAL,CAAA2L,EAAA,GAoC5BE,EApC4BD,EAAA,GAoClBE,EApCkBF,EAAA,GAAAG,EAqCGnI,mBAAS,IArCZoI,EAAAhM,OAAAK,EAAA,EAAAL,CAAA+L,EAAA,GAqC5BE,EArC4BD,EAAA,GAqCfE,EArCeF,EAAA,GAAAG,EAsCDvI,qBAtCCwI,EAAApM,OAAAK,EAAA,EAAAL,CAAAmM,EAAA,GAsC5BE,EAtC4BD,EAAA,GAsCjBE,EAtCiBF,EAAA,GAAAG,EAuCD3I,qBAvCC4I,EAAAxM,OAAAK,EAAA,EAAAL,CAAAuM,EAAA,GAuC5BE,EAvC4BD,EAAA,GAuCjBE,EAvCiBF,EAAA,GA0CnCzI,oBAAU,WACR,IAAI4I,EAAYC,IAAEC,OAAOhF,EAAa,CAACiF,YAAexF,EAAiBC,UACnEwF,EAAUH,IAAEhI,IAAI+H,EAAU,SAC9BI,EAAUA,EAAQF,OAAO,SAACG,GAAD,MAAoB,QAATA,IACpCV,EAAaW,KAAKC,IAAL1C,MAAAyC,KAAIjN,OAAAmN,EAAA,EAAAnN,CAAQ+M,IAASK,QAAQ,IAC1CV,EAAaO,KAAKI,IAAL7C,MAAAyC,KAAIjN,OAAAmN,EAAA,EAAAnN,CAAQ+M,IAASK,QAAQ,IAC1C,IAAME,EAASC,cAAgBC,OAAOT,GAASU,MAAM/B,GACjDgC,EAAW,GACfd,IAAE3K,QAAQ0K,EAAW,SAAAgB,GACnBD,EAASC,EAAKC,QAAUN,EAAOK,EAAKtL,SAEtCyJ,EAAY4B,GACZxB,EAAeoB,EAAOO,cACtB,CAACvG,EAAkBO,IAIrB,IAmEMiG,EAZYC,YAAW,SAACC,GAAD,MAAY,CACvCC,WAAY,CACVxO,MAAO,IACPC,OAAQ,GACRwO,SAAU,QACVC,IAAK,OACLC,KAAM,SACNC,SAAU,UACVC,QAAS,WAIGC,GAahB,GAXAxK,oBAAU,WACR,IAAIyK,EAAQ5B,IAAEhI,IAAIgI,IAAEC,OAAOhF,EAAa,CAACiF,YAAexF,EAAiBC,QAASqG,OAAUzC,IAAc,SAC1G,GAAa,QAATqD,EAAe,CACjB,IAAIC,GAAMD,EAAQ,IAAIE,MAAM,UAChBC,IAARF,EAAG,IAAkBA,EAAG,GAAGjJ,OAAO,IACpCgJ,EAAQI,WAAWJ,GAAOpB,QAAQ,IAGtC5B,EAAcgD,IACd,CAACrD,EAAatD,EAAaP,IAEzBO,EACF,OACEtF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAnFS,WACb,IAAIoM,EACAC,EAkBJ,OAfID,EADCxC,EAAU,OACF9J,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,GAAIC,EAAG,GAAI/I,MAAO,CAACoI,SAAU,WAAYhC,EAAU,KAASe,QAAQ,GAAK,IAAlF,KACFf,EAAU,IACR9J,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,GAAIC,EAAG,GAAI/I,MAAO,CAACoI,SAAU,WAAYhC,EAAU,KAAMe,QAAQ,GAAK,IAA/E,KAEA7K,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,GAAIC,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAAWhC,GAI1DyC,EADCrC,EAAU,OACFlK,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,IAAKC,EAAG,GAAI/I,MAAO,CAACoI,SAAU,WAAY5B,EAAU,KAASW,QAAQ,GAAK,IAAnF,KACFX,EAAU,IACRlK,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,IAAKC,EAAG,GAAI/I,MAAO,CAACoI,SAAU,WAAY5B,EAAU,KAAMW,QAAQ,GAAK,IAAhF,KAEA7K,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,IAAKC,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAAW5B,GAG3DzM,OAAOoD,KAAKyI,GAAUrG,OAAO,EAE/BjD,EAAAC,EAAAC,cAAA,OAAKhD,MAAM,MAAMC,OAAO,KAAKuP,UAAU,sBAEpCrC,IAAEhI,IAAIqH,EAAa,SAACiD,EAAYrK,GAC/B,OAAGoH,EAAYpH,GAAK,EACXtC,EAAAC,EAAAC,cAAA,QAAM0M,IAAOtK,EAAGkK,EAAG,GAAK,GAAMlK,EAAImK,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAA3D,IAAuEpC,EAAYpH,GAAGuI,QAAQ,IAC9FnB,EAAYpH,GAAK,OACjBtC,EAAAC,EAAAC,cAAA,QAAM0M,IAAOtK,EAAGkK,EAAG,GAAK,GAAMlK,EAAImK,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAA3D,KAAwEpC,EAAYpH,GAAG,KAASuI,QAAQ,GAAK,KAC7GnB,EAAYpH,GAAK,IACjBtC,EAAAC,EAAAC,cAAA,QAAM0M,IAAOtK,EAAGkK,EAAG,GAAK,GAAMlK,EAAImK,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAA3D,KAAwEpC,EAAYpH,GAAG,KAAMuI,QAAQ,GAAK,KAE5G7K,EAAAC,EAAAC,cAAA,QAAM0M,IAAOtK,EAAGkK,EAAG,GAAK,GAAMlK,EAAImK,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAA3D,IAAuEpC,EAAYpH,GAAGuI,QAAQ,MAGxGyB,EACAC,EAIElC,IAAEhI,IAAI8G,EAAc,SAAC0D,EAAOvK,GAC3B,OAAOtC,EAAAC,EAAAC,cAAA,QAAM0M,IAAKtK,EAAGkK,EAAG,GAAG,GAAGlK,EAAGmK,EAAG,GAAIvP,MAAM,KAAKC,OAAO,KAAKuG,MAAO,CAACoJ,KAAMD,EAAOE,YAAY,EAAGC,OAAQH,OAE7G7M,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,GAAIC,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAAtC,OAAqD/G,EAAiBG,MACtElF,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,GAAG,IAAMrD,EAAalG,OAAS,GAAIwJ,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAArE,QAAqF/G,EAAiBG,MAEtGlF,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,IAAKC,EAAG,GAAIvP,MAAM,KAAKC,OAAO,KAAKuG,MAAO,CAACoJ,KAAM,UAAWC,YAAY,GAAKC,OAAQ,aAC9FhN,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,IAAKC,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAAvC,UACA9L,EAAAC,EAAAC,cAAA,QAAMsM,EAAG,IAAKC,EAAG,GAAI/I,MAAO,CAACoI,SAAU,UAAvC,oBAGF,EAiCKmB,IAEHjN,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAASpG,GAAG,UAAUqG,UAAU,UAAUC,KAAM1E,GAAO,EAAG6C,QAAS,CAAE8B,QAAS9B,EAAQG,YACpF4B,MACEtN,EAAAC,EAAAC,cAAA,SACG0I,EAAY5I,EAAAC,EAAAC,cAAA,WADf,gBAEgB8I,IAGpBhJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqN,EAAD,CAEEjQ,WAAW,wBACXkQ,WAAS,GACTtQ,MAAO,IACPC,OAAQ,IACR4P,YAAc,GACdC,OAAQ,QACRzP,iBAAkB,CAACsB,MAAO,OAG1BmB,EAAAC,EAAAC,cAACuN,EAAD,CAAavM,UAAWsH,EAAQkE,UAAU,qBAExC,SAAA1N,GAAA,IAAGsB,EAAHtB,EAAGsB,YAAH,OACEN,EAAAC,EAAAC,cAAA,WACGI,EAAY+B,IAAI,SAAAqL,GAAG,OAClB1N,EAAAC,EAAAC,cAACyN,EAAD,CACEf,IAAKc,EAAIlL,OACTtB,UAAWwM,EACXE,QAAS,WACPlI,EAAsB,CAACP,eAAgBuI,EAAIG,cAE7C1K,aAAc,WACZwF,EAAS+E,EAAIG,WAAWxI,OACxBwD,EAAe6E,EAAIG,WAAWzI,KAAK,YAErChC,aAAc,WACZuF,EAAS,GACTE,EAAe1D,EAAeC,KAAK,YAErC0H,KAASpE,IAAQgF,EAAIG,WAAWxI,MAAS,eACM+G,IAA5C9C,EAAUoE,EAAIG,WAAWzI,KAAK,WAAyB,QAAQkE,EAAUoE,EAAIG,WAAWzI,KAAK,WAChG2H,YAAe5H,EAAeE,QAAQqI,EAAIG,WAAWxI,MAAQ,IAAI,GACjE2H,OAAU7H,EAAeE,QAAQqI,EAAIG,WAAWxI,MAAQ,UAAU,2HChMhFyI,GANc/H,EAAIgI,iBACtBC,IAAkBC,QAClB,iBAIyBC,GAAG,gBAAgBC,WAAW,UCezD,SAASC,GAAS1J,GAChB,IAAM2J,EAAahE,IAAEhI,IAAIqC,EAAM2J,WAAW,OACpCnJ,EAAOmF,IAAEhI,IAAIqC,EAAM2J,WAAW,QAFdjN,EAGGC,mBAAS,IAHZC,EAAA7D,OAAAK,EAAA,EAAAL,CAAA2D,EAAA,GAGfkN,EAHehN,EAAA,GAGTiN,EAHSjN,EAAA,GAAAuC,EAISxC,mBAAS,IAJlByC,EAAArG,OAAAK,EAAA,EAAAL,CAAAoG,EAAA,GAIf2K,EAJe1K,EAAA,GAIN2K,EAJM3K,EAAA,GAAAoF,EASgB3E,IAJ/BY,EALe+D,EAKf/D,eACLP,EANoBsE,EAMpBtE,cACAG,EAPoBmE,EAOpBnE,iBACAO,EARoB4D,EAQpB5D,YACUI,EATUwD,EASpBpD,QAAUJ,sBAsBZlE,oBAAU,YApBO,WAEf,IAEIkN,EAAarE,IAAEsE,OAAOtE,IAAEC,OAAOD,IAAEuE,OAAOtJ,EAAY,CAAC,cAAc,sCAAsC,CAACuJ,SAAYjK,EAAcE,QAAQuG,OAAUlG,EAAeC,KAAK,YAAY,CAAC,gBAC3LmJ,EAASG,GACT3N,QAAQC,IAAI,SAAS0N,GAGrB,IACII,EADEC,EAAU1E,IAAEsE,OAAOtE,IAAE2E,QAAQ3E,IAAEC,OAAOD,IAAEuE,OAAOtJ,EAAY,CAAC,cAAc,sCAAsC,CAACuJ,SAAYjK,EAAcE,UAAU,eAAe,CAAC,gBAEvKmK,EAAc,GAClB,IAAKH,KAAMC,EAAQ,CACjB,IAAIG,EAAO7E,IAAE8E,OAAO9E,IAAEuE,OAAOG,EAAQD,GAAI,CAAC,QAAQ,QAAQ,SAASM,GAAG,OAAOA,EAAEtP,QAC/EmP,EAAYI,KAAKH,EAAKrE,QAAQ,IAEhC9J,QAAQC,IAAI,OAAQiO,GACpBR,EAAYQ,GAIVK,IACD,CAACnK,EAAgBP,EAAeU,IAGnC,IAAMiK,EAASjB,EAAMjM,IAAI,SAACmN,EAAIC,GAC5B,IAAIC,EACJ,GAAiB,QAAbF,EAAI1P,MAAe,CACrB,IAAIoM,GAAMsD,EAAI1P,MAAQ,IAAIqM,MAAM,KAE9BuD,OADUtD,IAARF,EAAG,IAAkBA,EAAG,GAAGjJ,OAAO,EAC9BuM,EAAI1P,MAAM+K,QAAQ,GAElB2E,EAAI1P,WAGZ4P,EAAMF,EAAI1P,MAEZ,OACAE,EAAAC,EAAAC,cAACyP,EAAA,EAAMC,IAAP,CAAWhD,IAAK6C,EACN7B,QAAS,WACPlI,EAAsB,CAACX,iBAAkB,CAACC,QAAQwK,EAAIjF,YAClBtF,UAAUoJ,EAAWoB,GACrBvK,KAAMA,EAAKuK,OAE/CI,OAAU9K,EAAiBE,YAAcoJ,EAAWoB,IAE9DzP,EAAAC,EAAAC,cAACyP,EAAA,EAAMG,KAAP,CAAYpM,MAAO,CAACoI,SAAU,QAAQiE,cAAc,SAASC,UAAU,OAAQC,YAAY,UAAW5B,EAAWoB,IACjHzP,EAAAC,EAAAC,cAACyP,EAAA,EAAMG,KAAP,CAAYpM,MAAO,CAACoI,SAAU,QAAQiE,cAAc,SAASC,UAAU,SAAUC,YAAY,QAAQC,aAAa,UAAWR,GAC7H1P,EAAAC,EAAAC,cAACyP,EAAA,EAAMG,KAAP,CAAYpM,MAAO,CAACoI,SAAU,QAAQiE,cAAc,SAASC,UAAU,SAAUC,YAAY,QAAQC,aAAa,UAAW1B,EAASiB,OAKxI,OACAzP,EAAAC,EAAAC,cAACyP,EAAA,EAAMQ,KAAP,KAAaZ,GAKjB,SAASa,KAAa,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAIsBpM,IAHnCK,EADa+L,EACb/L,cACDG,EAFc4L,EAEd5L,iBACAO,EAHcqL,EAGdrL,YACUI,EAJIiL,EAId7K,QAAUJ,sBAJIoD,EA2DUzH,qBA3DV0H,EAAAtL,OAAAK,EAAA,EAAAL,CAAAqL,EAAA,GA2Db8H,EA3Da7H,EAAA,GA2DJ8H,EA3DI9H,EAAA,GA6DpBvH,oBAAU,WACV,IAAMsP,EAAMzG,IAAE2E,QAAQ3E,IAAEsE,OAAOtE,IAAEC,OAAOD,IAAEuE,OAAOtJ,EAAY,CAAC,cAAc,sCAAuC,CAACuJ,SAAYjK,EAAcE,UAAU,eAAe,eACvK+L,EAAWpT,OAAOoD,KAAKiQ,KACrB,CAAClM,IAEH,IAsDMyJ,EArD0B,4BAA1BzJ,EAAcC,UACT,CAAC,CAACkM,IAAM,qBAAsB7L,KAAO,OACd,CAAC6L,IAAM,2BAA2B7L,KAAO,OACzC,CAAC6L,IAAM,UAAU7L,KAAO,OACxB,CAAC6L,IAAM,iBAAiB7L,KAAO,OAC/B,CAAC6L,IAAM,aAAa7L,KAAO,OAC3B,CAAC6L,IAAM,iBAAiB7L,KAAO,OAC/B,CAAC6L,IAAM,8BAA+B7L,KAAO,OAC7C,CAAC6L,IAAM,UAAU7L,KAAO,QAE5B,sCAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,0CAA0C7L,KAAO,OAChE,CAAC6L,IAAM,kBAAkB7L,KAAO,OAChC,CAAC6L,IAAM,6CAA6C7L,KAAO,OAC3D,CAAC6L,IAAM,iDAAiD7L,KAAO,WAC/D,CAAC6L,IAAM,UAAU7L,KAAO,QAEE,oBAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,yBAAyB7L,KAAO,WAC/C,CAAC6L,IAAM,mCAAmC7L,KAAO,WACjD,CAAC6L,IAAM,8BAA8B7L,KAAO,WAC5C,CAAC6L,IAAM,wCAAwC7L,KAAO,WACtD,CAAC6L,IAAM,sCAAsC7L,KAAO,YAE1B,mCAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,uBAAuB7L,KAAO,OAC7C,CAAC6L,IAAM,sBAAsB7L,KAAO,OACpC,CAAC6L,IAAM,kCAAkC7L,KAAO,OAChD,CAAC6L,IAAM,oBAAoB7L,KAAO,QAER,eAAxBN,EAAcE,QACT,CAEL,CAACiM,IAAM,gBAAgB7L,KAAO,IAC9B,CAAC6L,IAAM,mBAAmB7L,KAAO,IACjC,CAAC6L,IAAM,wEAAwE7L,KAAO,IACtF,CAAC6L,IAAM,cAAc7L,KAAO,QAEJ,0BAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,qCAAqC7L,KAAO,OAC3D,CAAC6L,IAAM,eAAe7L,KAAO,OAC7B,CAAC6L,IAAM,oBAAoB7L,KAAO,IAClC,CAAC6L,IAAM,oBAAoB7L,KAAO,OAClC,CAAC6L,IAAM,eAAe7L,KAAO,QAEH,0BAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,2BAA2B7L,KAAO,OACjD,CAAC6L,IAAM,yBAAyB7L,KAAO,IACvC,CAAC6L,IAAM,gCAAgC7L,KAAO,IAC9C,CAAC6L,IAAM,4BAA4B7L,KAAO,aAJ5C,EASIkG,EAAOiD,EAAWhM,IAAI,SAACmN,EAAIC,GAAL,OAC5BzP,EAAAC,EAAAC,cAAC8Q,EAAA,EAASC,KAAV,CAAerE,IAAK6C,EAAOI,OAAQ9K,EAAiBE,YAAcuK,EAAIuB,IAAK1N,YAAa,WACtFqC,EAAsB,CAACX,iBAAkB,CAACC,QAAQ4L,EAAQnB,GACtBxK,UAAUuK,EAAIuB,IACd7L,KAAMsK,EAAItK,UACHsK,EAAIuB,OAOjD,OAJAhQ,QAAQC,IAAI,OAAQ+D,EAAiBE,WACrClE,QAAQC,IAAI,OAAQqN,GAIlBrO,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,KACEnR,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAMC,UAAQ,EAACC,SAAO,EAAC5N,MAAO,CAACxG,MAAM,MAAO4O,SAAS,SAAUiE,cAAe,WAChF/P,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAU5F,MAAI,EAACmG,aAAa,EAAOC,SAAS,OAAOC,aAAW,EAACC,KAAK,0BAA0BhO,MAAO,CAACiO,WAAW,QAASxU,OAAQ,QACtHyU,UAAY,QACZ/B,QAAqC,4BAA1BjL,EAAcC,WAAuCgN,WAChEjE,QAAS,WACPlI,EAAsB,CAACd,cAAe,CAACC,UAAU,0BACXC,QAAQ,+BAE1D9E,EAAAC,EAAAC,cAAC8Q,EAAA,EAASI,KAAV,KAAgBhG,IAElBpL,EAAAC,EAAAC,cAAC8Q,EAAA,GAADX,EAAA,CAAUjF,MAAI,EAACqG,aAAW,EAACF,aAAa,EAAOC,SAAS,QAAxD/T,OAAAqU,EAAA,EAAArU,CAAA4S,EAAA,kBAAA5S,OAAAqU,EAAA,EAAArU,CAAA4S,EAAA,OAAgF,qCAAhF5S,OAAAqU,EAAA,EAAArU,CAAA4S,EAAA,QAA2H,CAACsB,WAAW,QAASxU,OAAQ,SAAxJM,OAAAqU,EAAA,EAAArU,CAAA4S,EAAA,UACiD,sCAA1BzL,EAAcC,WAAiDgN,YADtFpU,OAAAqU,EAAA,EAAArU,CAAA4S,EAAA,UAEqB,WACH3K,EAAsB,CAACd,cAAe,CAACC,UAAU,oCACXC,QAAQ,yCAJhEuL,GAMKrQ,EAAAC,EAAAC,cAAC8Q,EAAA,EAASI,KAAV,KAAgBhG,IAErBpL,EAAAC,EAAAC,cAAC8Q,EAAA,GAADV,EAAA,CAAUlF,MAAI,EAACqG,aAAW,EAACF,aAAa,EAAOC,SAAS,QAAxD/T,OAAAqU,EAAA,EAAArU,CAAA6S,EAAA,kBAAA7S,OAAAqU,EAAA,EAAArU,CAAA6S,EAAA,OAAgF,mBAAhF7S,OAAAqU,EAAA,EAAArU,CAAA6S,EAAA,QAAyG,CAACqB,WAAW,SAAUxU,OAAQ,SAAvIM,OAAAqU,EAAA,EAAArU,CAAA6S,EAAA,UACiD,oBAA1B1L,EAAcC,WAA+BgN,YADpEpU,OAAAqU,EAAA,EAAArU,CAAA6S,EAAA,UAEqB,WACH5K,EAAsB,CAACd,cAAe,CAACC,UAAU,kBACXC,QAAQ,uBAJhEwL,GAMEtQ,EAAAC,EAAAC,cAAC8Q,EAAA,EAASI,KAAV,KAAgBhG,IAElBpL,EAAAC,EAAAC,cAAC8Q,EAAA,GAADT,EAAA,CAAUnF,MAAI,EAACqG,aAAW,EAACF,aAAa,EAAOC,SAAS,QAAxD/T,OAAAqU,EAAA,EAAArU,CAAA8S,EAAA,kBAAA9S,OAAAqU,EAAA,EAAArU,CAAA8S,EAAA,OAAgF,kCAAhF9S,OAAAqU,EAAA,EAAArU,CAAA8S,EAAA,QAAwH,CAACoB,WAAW,QAASxU,OAAQ,SAArJM,OAAAqU,EAAA,EAAArU,CAAA8S,EAAA,UACiD,mCAA1B3L,EAAcC,WAA8CgN,YADnFpU,OAAAqU,EAAA,EAAArU,CAAA8S,EAAA,UAEqB,WACH7K,EAAsB,CAACd,cAAe,CAACC,UAAU,iCACXC,QAAQ,sCAJhEyL,GAMEvQ,EAAAC,EAAAC,cAAC8Q,EAAA,EAASI,KAAV,KAAgBhG,IAEhBpL,EAAAC,EAAAC,cAAC8Q,EAAA,GAADR,EAAA,CAAUpF,MAAI,EAACqG,aAAW,EAACF,aAAa,EAAOC,SAAS,QAAxD/T,OAAAqU,EAAA,EAAArU,CAAA+S,EAAA,kBAAA/S,OAAAqU,EAAA,EAAArU,CAAA+S,EAAA,OAAgF,eAAhF/S,OAAAqU,EAAA,EAAArU,CAAA+S,EAAA,QAAqG,CAACmB,WAAW,QAASxU,OAAQ,SAAlIM,OAAAqU,EAAA,EAAArU,CAAA+S,EAAA,UAC+C,eAA1B5L,EAAcC,WAA0BgN,YAD7DpU,OAAAqU,EAAA,EAAArU,CAAA+S,EAAA,UAEmB,WACH9K,EAAsB,CAACd,cAAe,CAACC,UAAU,aACXC,QAAQ,kBAJ9D0L,GAMExQ,EAAAC,EAAAC,cAAC8Q,EAAA,EAASI,KAAV,KAAgBhG,IAElBpL,EAAAC,EAAAC,cAAC8Q,EAAA,GAADP,EAAA,CAAUrF,MAAI,EAACqG,aAAW,EAACF,aAAa,EAAOC,SAAS,QAAxD/T,OAAAqU,EAAA,EAAArU,CAAAgT,EAAA,kBAAAhT,OAAAqU,EAAA,EAAArU,CAAAgT,EAAA,OAAgF,yBAAhFhT,OAAAqU,EAAA,EAAArU,CAAAgT,EAAA,QAA+G,CAACkB,WAAW,QAASxU,OAAQ,SAA5IM,OAAAqU,EAAA,EAAArU,CAAAgT,EAAA,UAC+C,0BAA1B7L,EAAcC,WAAqCgN,YADxEpU,OAAAqU,EAAA,EAAArU,CAAAgT,EAAA,UAEmB,WACL/K,EAAsB,CAACd,cAAe,CAACC,UAAU,wBACXC,QAAQ,6BAJ5D2L,GAMEzQ,EAAAC,EAAAC,cAAC8Q,EAAA,EAASI,KAAV,KAAgBhG,IAElBpL,EAAAC,EAAAC,cAAC8Q,EAAA,GAADN,EAAA,CAAUtF,MAAI,EAACqG,aAAW,EAACF,aAAa,EAAOC,SAAS,QAAxD/T,OAAAqU,EAAA,EAAArU,CAAAiT,EAAA,kBAAAjT,OAAAqU,EAAA,EAAArU,CAAAiT,EAAA,OAAgF,yBAAhFjT,OAAAqU,EAAA,EAAArU,CAAAiT,EAAA,QAA+G,CAACiB,WAAW,QAASxU,OAAQ,SAA5IM,OAAAqU,EAAA,EAAArU,CAAAiT,EAAA,UAC+C,0BAA1B9L,EAAcC,WAAqCgN,YADxEpU,OAAAqU,EAAA,EAAArU,CAAAiT,EAAA,UAEmB,WACLhL,EAAsB,CAACd,cAAe,CAACC,UAAU,wBACXC,QAAQ,6BAJ5D4L,GAME1Q,EAAAC,EAAAC,cAAC8Q,EAAA,EAASI,KAAV,KAAgBhG,MAQxB,SAAS2G,KAAY,IACZzM,EAAef,IAAfe,YAEP,GAAGA,EACH,OACAtF,EAAAC,EAAAC,cAACgR,EAAA,EAAD,KACAlR,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,KACE5P,EAAAC,EAAAC,cAAC8R,EAAA,EAAD,CAAQC,GAAG,KAAKvO,MAAO,CAACwO,WAAY,IAAKrF,MAAM,UAAWoD,YAAY,MAAOkC,WAAY,WAAWnS,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mCAEzGF,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,CAAUlM,MAAO,CAACyO,WAAY,SAASlC,YAAY,SAAU/S,MAAM,MAAO8S,UAAU,OAAQoC,QAAsB,aAAb9M,EAA2B,QAAS,SACvItF,EAAAC,EAAAC,cAACkQ,GAAD,QAMJ,SAASiC,KAAY,IACZ3L,EAAcM,IAAdN,WADY0C,EAEI/H,qBAFJgI,EAAA5L,OAAAK,EAAA,EAAAL,CAAA2L,EAAA,GAEZkJ,EAFYjJ,EAAA,GAEPkJ,EAFOlJ,EAAA,GAAAG,EAGQnI,qBAHRoI,EAAAhM,OAAAK,EAAA,EAAAL,CAAA+L,EAAA,GAGZgJ,EAHY/I,EAAA,GAGLgJ,EAHKhJ,EAAA,GAAAiJ,EASmBnO,IAJ/BK,EALY8N,EAKZ9N,cACLG,EANiB2N,EAMjB3N,iBACAI,EAPiBuN,EAOjBvN,eACAG,EARiBoN,EAQjBpN,YACUI,EATOgN,EASjB5M,QAAUJ,sBAENiN,EAAS,eAAA3T,EAAAvB,OAAA6J,EAAA,EAAA7J,CAAA8J,EAAAtH,EAAAuH,KAAG,SAAAC,IAAA,IAAAmL,EAAA,OAAArL,EAAAtH,EAAA0H,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGgG,GAAO+E,KAAK,GAAG,CAACvV,WAAW,CAACuR,SAAW,EAAEtE,YAAc,EAAEzK,MAAQ,EAAEuL,OAAS,EAAEiH,KAAO,EAAEE,OAAS,KAAKM,UADxG,OACVF,EADUhL,EAAAG,KAEhBrC,EAAsB,CAACJ,YAAYsN,IAFnB,wBAAAhL,EAAAI,SAAAP,MAAH,yBAAAzI,EAAAiJ,MAAAC,KAAAC,YAAA,GAKf3G,oBAAU,YACW,IAAfkF,GACFiM,KAEF,IAEFnR,oBAAU,WACR,IAAI8Q,EAAOjI,IAAEhI,IAAIgI,IAAEC,OAAOhF,EAAY,CAACiF,YAAcxF,EAAiBC,QAAQqG,OAAS,kBAAkB,QACzGkH,EAAQD,GACR,IAAIE,EAASnI,IAAEhI,IAAIgI,IAAEC,OAAOhF,EAAY,CAACiF,YAAcxF,EAAiBC,QAAQqG,OAAS,kBAAkB,UAC3GoH,EAAUD,IACV,CAACzN,EAAiBO,IAyDpB,GAAGA,EACH,OACEtF,EAAAC,EAAAC,cAACgR,EAAA,EAAD,KACElR,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,KACE5P,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,CAAazN,MAAO,CAACuM,YAAY,SAC/BjQ,EAAAC,EAAAC,cAAC8R,EAAA,EAAD,CAAQC,GAAG,KAAKvO,MAAO,CAACwO,WAAY,MAApC,sBACsB/M,EAAeC,KADrC,UAEEpF,EAAAC,EAAAC,cAAC8R,EAAA,EAAOe,UAAR,CAAkBrP,MAAO,CAACwO,WAAY,MAAtC,gEACgE/M,EAAeC,KAD/E,eAMNpF,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,CAAUoD,QAAS,GAEfhT,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,KACE5P,EAAAC,EAAAC,cAAC8R,EAAA,EAAD,CAAQC,GAAG,KAAKvO,MAAO,CAACwO,WAAY,IAAKrF,MAAM,UAAWoD,YAAY,QAAQjQ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uEAMrFF,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,CAAazN,MAAO,CAACyO,WAAY,QAAQlC,YAAY,OAAOD,UAAU,SAAU7S,OAAO,UAErF6C,EAAAC,EAAAC,cAAC8R,EAAA,EAAD,CAAQiB,OAAK,EAAChB,GAAG,KAAKvO,MAAO,CAACwO,WAAY,IAAKhV,MAAM,QAASgW,gBAAgB,UAAUrG,MAAM,aAAckD,cAAc,SAASoC,WAAW,QAAQgB,cAAc,QAAQC,OAAO,IAAIC,aAAa,wBAEjMzO,EAAcC,WAGjB7E,EAAAC,EAAAC,cAACyP,EAAA,EAAD,CAAO2D,YAAU,EAACC,MAAM,OAAOC,OAAK,EAAC9P,MAAO,CAACxG,MAAM,UACjD8C,EAAAC,EAAAC,cAACyP,EAAA,EAAMqC,OAAP,KACEhS,EAAAC,EAAAC,cAACyP,EAAA,EAAMC,IAAP,KACE5P,EAAAC,EAAAC,cAACyP,EAAA,EAAM8D,WAAP,CAAkB/P,MAAO,CAACgQ,UAAW,EAAGxB,WAAW,IAAIlC,UAAU,SAAU9S,MAAM,QAAjF,kBACA8C,EAAAC,EAAAC,cAACyP,EAAA,EAAM8D,WAAP,CAAkB/P,MAAO,CAACgQ,UAAW,EAAGxB,WAAW,IAAIlC,UAAU,SAAU9S,MAAM,MAAO+S,YAAY,IAAIC,aAAa,MAArH,eACAlQ,EAAAC,EAAAC,cAACyP,EAAA,EAAM8D,WAAP,CAAkB/P,MAAO,CAACgQ,UAAW,EAAGxB,WAAW,IAAIlC,UAAU,SAAU9S,MAAM,QAAjF,gBAGJ8C,EAAAC,EAAAC,cAACkO,GAAD,CAAUC,WA1FY,4BAA1BzJ,EAAcC,UACT,CAAC,CAACkM,IAAM,qBAAsB7L,KAAO,OACd,CAAC6L,IAAM,2BAA2B7L,KAAO,OACzC,CAAC6L,IAAM,UAAU7L,KAAO,OACxB,CAAC6L,IAAM,iBAAiB7L,KAAO,OAC/B,CAAC6L,IAAM,aAAa7L,KAAO,OAC3B,CAAC6L,IAAM,iBAAiB7L,KAAO,OAC/B,CAAC6L,IAAM,8BAA+B7L,KAAO,OAC7C,CAAC6L,IAAM,UAAU7L,KAAO,QAE5B,sCAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,0CAA0C7L,KAAO,OAChE,CAAC6L,IAAM,kBAAkB7L,KAAO,OAChC,CAAC6L,IAAM,6CAA6C7L,KAAO,OAC3D,CAAC6L,IAAM,iDAAiD7L,KAAO,WAC/D,CAAC6L,IAAM,UAAU7L,KAAO,QAEE,oBAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,yBAAyB7L,KAAO,WAC/C,CAAC6L,IAAM,mCAAmC7L,KAAO,WACjD,CAAC6L,IAAM,8BAA8B7L,KAAO,WAC5C,CAAC6L,IAAM,wCAAwC7L,KAAO,WACtD,CAAC6L,IAAM,sCAAsC7L,KAAO,YAE1B,mCAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,uBAAuB7L,KAAO,OAC7C,CAAC6L,IAAM,sBAAsB7L,KAAO,OACpC,CAAC6L,IAAM,kCAAkC7L,KAAO,OAChD,CAAC6L,IAAM,oBAAoB7L,KAAO,QAER,eAAxBN,EAAcE,QACT,CAEL,CAACiM,IAAM,gBAAgB7L,KAAO,IAC9B,CAAC6L,IAAM,mBAAmB7L,KAAO,IACjC,CAAC6L,IAAM,wEAAwE7L,KAAO,IACtF,CAAC6L,IAAM,cAAc7L,KAAO,QAEJ,0BAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,qCAAqC7L,KAAO,OAC3D,CAAC6L,IAAM,eAAe7L,KAAO,OAC7B,CAAC6L,IAAM,oBAAoB7L,KAAO,IAClC,CAAC6L,IAAM,oBAAoB7L,KAAO,OAClC,CAAC6L,IAAM,eAAe7L,KAAO,QAEH,0BAAxBN,EAAcE,QACT,CAAC,CAACiM,IAAM,2BAA2B7L,KAAO,OACjD,CAAC6L,IAAM,yBAAyB7L,KAAO,IACvC,CAAC6L,IAAM,gCAAgC7L,KAAO,IAC9C,CAAC6L,IAAM,4BAA4B7L,KAAO,aAJ5C,OAiDElF,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,KACE5P,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,CAAazN,MAAO,CAACuM,YAAa,MAAMnE,SAAS,SAAUkE,UAAU,SACnEhQ,EAAAC,EAAAC,cAAA,0BAAqBoS,EAAKtS,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAAA,qBAAgBsS,KAO1B,SAASmB,KAAW,IAAAC,EAIoBrP,IAH/BQ,EADW6O,EACX7O,iBAELO,GAHgBsO,EAEhBzO,eAFgByO,EAGhBtO,aAHgBsO,EAIhB9N,QAAUJ,sBAEd,GAAGJ,EACD,OACEtF,EAAAC,EAAAC,cAACgR,EAAA,EAAD,KACElR,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,KACE5P,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,KACEnR,EAAAC,EAAAC,cAAC8R,EAAA,EAAD,CAAQC,GAAG,KAAKvO,MAAO,CAACwO,WAAY,IAAKjC,YAAY,OAAQ9S,OAAO,MAAM0P,MAAM,YAC7E9H,EAAiBE,UAClBjF,EAAAC,EAAAC,cAAC8R,EAAA,EAAOe,UAAR,CAAkBrP,MAAO,CAACwO,WAAY,IAAK2B,OAAO,MAAM5D,YAAY,SAApE,uCACuClL,EAAiBE,UADxD,kCAIFjF,EAAAC,EAAAC,cAAC8R,EAAA,EAAD,CAAQC,GAAG,KAAKvO,MAAO,CAACwO,WAAY,IAAKC,WAAW,MAAOlC,YAAY,MAAOkD,cAAc,OAAQnD,UAAU,OAAOnD,MAAM,YACzH7M,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,gEAITF,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,CAAUlM,MAAO,CAACqI,QAAQ,MACxB/L,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,KACEnR,EAAAC,EAAAC,cAACuI,EAAD,SAQK,SAASqL,KAAa,IAAAlK,EACLvI,oBAAS,GADJwI,EAAApM,OAAAK,EAAA,EAAAL,CAAAmM,EAAA,GAC5BmK,EAD4BlK,EAAA,GACnBmK,EADmBnK,EAAA,GAAAG,EAED3I,mBAAS,GAFR4I,EAAAxM,OAAAK,EAAA,EAAAL,CAAAuM,EAAA,GAE5BiK,EAF4BhK,EAAA,GAEjBiK,EAFiBjK,EAAA,GAI/BkK,EAAM,EAaV,OAZA3S,oBAAU,WACR,IAAI7B,EAAIyU,SAAUC,EAAM1U,EAAE2U,gBAAiBC,EAAM5U,EAAE4U,KACnDJ,EAAMzS,OAAO8S,YAAcH,EAAKI,aAAeF,EAAKE,YACpDP,EAAaC,GACTA,EAAI,MACNH,GAAW,IAEb,CAACC,EAAWvS,OAAO8S,aAErBzT,QAAQC,IAAIiT,GAIVjU,EAAAC,EAAAC,cAACuE,EAAD,KACEzE,EAAAC,EAAAC,cAACwU,EAAA,EAAD,KACE1U,EAAAC,EAAAC,cAACgR,EAAA,EAAD,CAAMxN,MAAO,CAACyO,WAAY,QACxBnS,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,CAAU+E,UAAQ,EAAC3B,QAAS,EAC5BtP,MAAO,CAAEkR,WAAY,+CAAgDzX,OAAQ,SAE3E6C,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,CAAanB,UAAU,UACrBhQ,EAAAC,EAAAC,cAAC8R,EAAA,EAAD,CAAQC,GAAG,KAAKvO,MAAO,CAACwO,WAAY,IAAIrF,MAAM,eAA9C,+BAEE7M,EAAAC,EAAAC,cAAC8R,EAAA,EAAOe,UAAR,CAAkBrP,MAAO,CAACwO,WAAY,IAAIrF,MAAM,eAAhD,oEAMN7M,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,KACI5P,EAAAC,EAAAC,cAAC8R,EAAA,EAAD,CAAQC,GAAG,KAAKvO,MAAO,CAACwO,WAAY,IAAKjC,YAAa,OAAQkC,WAAY,SAA1E,uBAGAnS,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CAAMnR,MAAO,CAACwO,WAAY,IAAKrF,MAAM,QAASsF,WAAY,QAAS2C,KAAK,SAGpE9U,EAAAC,EAAAC,cAAC6U,EAAA,EAAD,CAAMC,KAAK,6BAHf,mDAG4FhV,EAAAC,EAAAC,cAAA,yBAH5F,oDAGgKF,EAAAC,EAAAC,cAAA,wBAHhK,KAGoLF,EAAAC,EAAAC,cAAA,WAGhLF,EAAAC,EAAAC,cAAC6U,EAAA,EAAD,CAAMC,KAAK,6BANf,yCAMkFhV,EAAAC,EAAAC,cAAA,wBANlF,iDAMkJF,EAAAC,EAAAC,cAAA,yBANlJ,MAUJF,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,MACAjV,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,CAAU+E,UAAQ,EAAC3B,QAAS,EAAGtP,MAAO,CAAE0O,QAAS2B,EAAU,OAAS,QAAS5B,WAAW,QACtFnS,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,CAAajU,MAAO,EAAG8S,UAAU,UAC/BhQ,EAAAC,EAAAC,cAAC6R,GAAD,OAEF/R,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,CAAajU,MAAO,EAAG8S,UAAU,UAC/BhQ,EAAAC,EAAAC,cAACyT,GAAD,OAEF3T,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,CAAajU,MAAO,EAAG8S,UAAU,UAC/BhQ,EAAAC,EAAAC,cAACmS,GAAD,QAGJrS,EAAAC,EAAAC,cAACgR,EAAA,EAAKtB,IAAN,CAAUlM,MAAO,CAAE0O,QAAS2B,EAAU,QAAU,OAAQ/D,UAAU,OAAQnD,MAAM,MAAOsF,WAAW,MAAMlC,YAAY,QAClHjQ,EAAAC,EAAAC,cAACgR,EAAA,EAAKC,OAAN,KAMEnR,EAAAC,EAAAC,cAACgV,GAAA,EAAD,CAAOC,SAAS,SACdnV,EAAAC,EAAAC,cAACkV,GAAA,EAAD,CAAY1R,MAAO,CAACoI,SAAU,WAA9B,WADF,wKC7gBd,SAASuJ,KAAQ,IAAAC,EAIXtO,IAJWuO,GAAAD,EAEb5O,WAFa4O,EAGbxP,SAAyBuB,GAHZkO,EAGFnN,aAHEmN,EAGYlO,sBAO3B,OAJA7F,oBAAU,WACR6F,KACC,IAEIrH,EAAAC,EAAAC,cAAC4T,GAAD,iBCvBH0B,GAAcpB,SAASqB,eAAe,QAC5CC,IAASC,OAAO3V,EAAAC,EAAAC,cDGD,WACb,OACEF,EAAAC,EAAAC,cAAC+G,EAAD,KACEjH,EAAAC,EAAAC,cAACmV,GAAD,QCNU,MAASG","file":"static/js/main.ce50ae08.chunk.js","sourcesContent":["\nimport React, {\n  createContext,\n  useMemo,\n  useCallback,\n} from \"react\"\nimport PropTypes from \"prop-types\"\nimport * as d3Geo from \"d3-geo\"\n\nconst { geoPath, ...projections } = d3Geo\n\nconst MapContext = createContext()\n\nconst makeProjection = ({\n  projectionConfig = {},\n  projection = \"geoEqualEarth\",\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0\n}) => {\n  const isFunc = typeof projection === \"function\"\n\n  if (isFunc) return projection\n\n  const scl = projectionConfig.scale || null;\n\n  //let proj = projections[projection]().translate([width/2 + (offsetX)*scl/1000 ,height/2 + (offsetY)*scl/1000]);\n  //let proj = projections[projection]().translate([width/2000 + (offsetX)*scl/1000 ,height/2000 + (offsetY)*scl/1000]);\n  let proj = projections[projection]().translate([width/2 + (offsetX)*scl/1000 ,height + (offsetY)*scl/1000]).rotate([82 + 10 / 60, -30]).scale(100);\n\n  const supported = [\n    proj.center ? \"center\" : null,\n    proj.rotate ? \"rotate\" : null,\n    proj.scale ? \"scale\" : null,\n    proj.parallels ? \"parallels\" : null,\n  ]\n\n  supported.forEach(d => {\n    if (!d) return\n    proj = proj[d](projectionConfig[d] || proj[d]())\n  })\n\n  return proj\n}\n\nconst MapProvider = ({\n  width,\n  height,\n  offsetX,\n  offsetY,\n  projection,\n  projectionConfig,\n  ...restProps\n}) => {\n  const [cx, cy] = projectionConfig.center || []\n  const [rx, ry, rz] = projectionConfig.rotate || []\n  const [p1, p2] = projectionConfig.parallels || []\n  const s = projectionConfig.scale || null\n\n  const projMemo = useMemo(() => {\n    return makeProjection({\n      projectionConfig: {\n        center: (cx || cx === 0) || (cy || cy === 0) ? [cx, cy] : null,\n        rotate: (rx || rx === 0) || (ry || ry === 0) ? [rx, ry, rz] : null,\n        parallels: (p1 || p1 === 0) || (p2 || p2 === 0) ? [p1, p2] : null,\n        scale: s,\n      },\n      projection,\n      width,\n      height,\n      offsetX,\n      offsetY,\n    })\n  }, [ width, height, projection, cx, cy, rx, ry, rz, p1, p2, s, offsetX, offsetY ])\n\n  const proj = useCallback(projMemo, [projMemo])\n\n  const value = useMemo(() => {\n    return {\n      width,\n      height,\n      projection: proj,\n      path: geoPath().projection(proj),\n    }\n  }, [ width, height, proj ])\n\n  return (<MapContext.Provider value={value} {...restProps} />)\n}\n\nMapProvider.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  offsetX: PropTypes.number,\n  offsetY: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n}\n\nexport { MapProvider, MapContext }\n","\nimport { feature } from \"topojson-client\"\n\nexport function getCoords(w, h, t) {\n  const xOffset = (w * t.k - w) / 2\n  const yOffset = (h * t.k - h) / 2\n  return [w / 2 - (xOffset + t.x) / t.k, h / 2 - (yOffset + t.y) / t.k]\n}\n\nexport function fetchGeographies(url) {\n  return fetch(url)\n    .then(res => {\n      if (!res.ok) {\n        throw Error(res.statusText)\n      }\n      return res.json()\n    }).catch(error => {\n      console.log(\"There was a problem when fetching the data: \", error)\n    })\n}\n\nexport function getFeatures(geographies, parseGeographies) {\n  if (Array.isArray(geographies)) return parseGeographies ? parseGeographies(geographies) : geographies\n  const feats = feature(\n    geographies,\n    geographies.objects[Object.keys(geographies.objects)[0]]\n  ).features\n  console.log(geographies.objects[Object.keys(geographies.objects)[0]])\n  return parseGeographies ? parseGeographies(feats) : feats\n}\n\nexport function prepareFeatures(geographies, path) {\n  return geographies ? geographies.map((d, i) => {\n    return {\n      ...d,\n      rsmKey: `geo-${i}`,\n      svgPath: path(d),\n    }\n  }) : []\n}\n\nexport function createConnectorPath(dx = 30, dy = 30, curve = 0.5) {\n  const curvature = Array.isArray(curve) ? curve : [curve, curve]\n  const curveX = dx / 2 * curvature[0]\n  const curveY = dy / 2 * curvature[1]\n  return `M${0},${0} Q${-dx / 2 - curveX},${-dy / 2 + curveY} ${-dx},${-dy}`\n}\n\nexport function isString(geo) { return typeof geo === \"string\" }\n","\nimport { useMemo, useState, useEffect, useContext } from \"react\"\nimport { MapContext } from \"./MapProvider\"\n\nimport { fetchGeographies, getFeatures, prepareFeatures, isString } from \"./utils\"\n\nexport default function useGeographies({ geography, parseGeographies }) {\n  const { path } = useContext(MapContext)\n  const [geographies, setGeographies] = useState()\n\n  useEffect(() => {\n    if (typeof window === `undefined`) return\n\n    if (isString(geography)) {\n      fetchGeographies(geography).then(geos => {\n        if (geos) setGeographies(getFeatures(geos, parseGeographies))\n      })\n    } else {\n      setGeographies(getFeatures(geography, parseGeographies))\n    }\n  }, [geography, parseGeographies])\n\n  const output = useMemo(() => {\n    return prepareFeatures(geographies, path)\n  }, [geographies, path])\n\n  return { geographies: output }\n}\n","\nimport React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapContext } from \"./MapProvider\"\nimport useGeographies from \"./useGeographies\"\n\nconst Geographies = ({\n  geography,\n  children,\n  parseGeographies,\n  className = \"\",\n  ...restProps\n}) => {\n  const { path, projection } = useContext(MapContext)\n  const { geographies } = useGeographies({ geography, parseGeographies })\n\n  return (\n    <g className={`rsm-geographies ${className}`} \n    height={100}\n    {...restProps}>\n      {\n        geographies && geographies.length > 0 &&\n        children({ geographies, path, projection })\n      }\n    </g>\n  )\n}\n\nGeographies.propTypes = {\n  geography: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  children: PropTypes.func,\n  parseGeographies: PropTypes.func,\n  className: PropTypes.string,\n}\n\nexport default Geographies\n","\nimport React, { useState, memo } from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Geography = ({\n  geography,\n  onMouseEnter,\n  onMouseLeave,\n  onMouseDown,\n  onMouseUp,\n  onFocus,\n  onBlur,\n  style = {},\n  className = \"\",\n  ...restProps\n}) => {\n  const [isPressed, setPressed] = useState(false)\n  const [isFocused, setFocus] = useState(false)\n\n  function handleMouseEnter(evt) {\n    setFocus(true)\n    if (onMouseEnter) onMouseEnter(evt)\n  }\n\n  function handleMouseLeave(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onMouseLeave) onMouseLeave(evt)\n  }\n\n  function handleFocus(evt) {\n    setFocus(true)\n    if (onFocus) onFocus(evt)\n  }\n\n  function handleBlur(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onBlur) onBlur(evt)\n  }\n\n  function handleMouseDown(evt) {\n    setPressed(true)\n    if (onMouseDown) onMouseDown(evt)\n  }\n\n  function handleMouseUp(evt) {\n    setPressed(false)\n    if (onMouseUp) onMouseUp(evt)\n  }\n\n  return (\n    <path\n      tabIndex=\"0\"\n      className={`rsm-geography ${className}`}\n      d={geography.svgPath}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      style={style[isPressed || isFocused ? (isPressed ? \"pressed\" : \"hover\") : \"default\"]}\n      {...restProps}\n    />\n  )\n}\n\nGeography.propTypes = {\n  geography: PropTypes.object,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  style: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default memo(Geography)\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapProvider } from \"./MapProvider\"\n\nconst ComposableMap = ({\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0,\n  projection = \"geoEqualEarth\",\n  projectionConfig = {},\n  className = \"\",\n  ...restProps\n}) => {\n  return (\n    <MapProvider\n      width={width}\n      height={height}\n      offsetX={offsetX}\n      offsetY={offsetY}\n      projection={projection}\n      projectionConfig={projectionConfig}\n    >\n      <svg\n        width={width}\n        height={height}\n        className={`rsm-svg ${className}`}\n        {...restProps}\n      />\n    </MapProvider>\n  )\n}\n\nComposableMap.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default ComposableMap\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GADMContext = React.createContext();\n\n// Create a React Hook that lets us get data from our auth context\nexport function useGADM() {\n  const context = React.useContext(GADMContext);\n  if (!context) {\n    throw new Error(`useGADM must be used within a GADMProvider`);\n  }\n  return context;\n}\n\n// Create a component that controls auth state and exposes it via\n// the React Context we created.\nexport function GADMProvider(props) {\n\n  const [pageState, setPageState] = React.useState({\n    selectedTable: {tableName: 'Demographic Composition',qryName: 'Demographic Composition'},\n    selectedVariable: {'varName': '65 years or older', 'printName': '% of 65 y or older', 'unit': '(%)'},\n    selectedCounty: {NAME: 'Fulton', GEOID: '13121'}, \n    fetchedData:[]\n  });\n\n  const handlePageStateChange = (doc) => {\n    setPageState({...pageState, ...doc});\n  };\n\n\n  // We useMemo to improve performance by eliminating some re-renders\n  const pageInfo = React.useMemo(\n    () => {\n      const { selectedTable, selectedVariable, selectedCounty, fetchedData, firstRender } = pageState;\n      const value = {\n        selectedTable,\n        selectedVariable,\n        selectedCounty,\n        fetchedData,\n        actions: { handlePageStateChange },\n      };\n      return value;\n    },\n    [pageState],\n  );\n  return (\n    <GADMContext.Provider value={pageInfo}>\n      {props.children}\n    </GADMContext.Provider>\n  );\n}\nGADMProvider.propTypes = {\n  children: PropTypes.element,\n};\n","import { Stitch } from \"mongodb-stitch-browser-sdk\";\n\n// TODO: Add your Stitch app's App ID\nconst APP_ID = \"test-owzgf\";\n\n// TODO: Initialize the app client\nconst app = Stitch.hasAppClient(APP_ID)\n  ? Stitch.getAppClient(APP_ID)\n  : Stitch.initializeAppClient(APP_ID);\n\nexport { app };\n","import { AnonymousCredential } from \"mongodb-stitch-browser-sdk\";\nimport { app } from \"./app.js\";\n\nexport function loginAnonymous() {\n  // Allow users to log in anonymously\n  const credential = new AnonymousCredential();\n  return app.auth.loginWithCredential(credential);\n}\n\nexport function hasLoggedInUser() {\n  // Check if there is currently a logged in user\n  return app.auth.isLoggedIn;\n}\n\nexport function getCurrentUser() {\n  // Return the user object of the currently logged in user\n  return app.auth.isLoggedIn ? app.auth.user : null;\n}\n\nexport function logoutCurrentUser() {\n  // Logout the currently logged in user\n  const user = getCurrentUser();\n  return app.auth.logoutUserWithId(user.id);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  hasLoggedInUser,\n  loginAnonymous,\n  logoutCurrentUser,\n  getCurrentUser,\n} from \"./../stitch/authentication\";\n\n// Create a React Context that lets us expose and access auth state\n// without passing props through many levels of the component tree\nconst StitchAuthContext = React.createContext();\n\n// Create a React Hook that lets us get data from our auth context\nexport function useStitchAuth() {\n  const context = React.useContext(StitchAuthContext);\n  if (!context) {\n    throw new Error(`useStitchAuth must be used within a StitchAuthProvider`);\n  }\n  return context;\n}\n\n// Create a component that controls auth state and exposes it via\n// the React Context we created.\nexport function StitchAuthProvider(props) {\n  const [authState, setAuthState] = React.useState({\n    isLoggedIn: hasLoggedInUser(),\n    currentUser: getCurrentUser(),\n  });\n\n  // Authentication Actions\n  const handleAnonymousLogin = async () => {\n    const { isLoggedIn } = authState;\n    if (!isLoggedIn) {\n      const loggedInUser = await loginAnonymous();\n      setAuthState({\n        ...authState,\n        isLoggedIn: true,\n        currentUser: loggedInUser,\n      });\n    }\n  };\n  const handleLogout = async () => {\n    const { isLoggedIn } = authState;\n    if (isLoggedIn) {\n      await logoutCurrentUser();\n      setAuthState({\n        ...authState,\n        isLoggedIn: false,\n        currentUser: null,\n      });\n    } else {\n      console.log(`can't handleLogout when no user is logged in`);\n    }\n  };\n\n  // We useMemo to improve performance by eliminating some re-renders\n  const authInfo = React.useMemo(\n    () => {\n      const { isLoggedIn, currentUser } = authState;\n      const value = {\n        isLoggedIn,\n        currentUser,\n        actions: { handleAnonymousLogin, handleLogout },\n      };\n      return value;\n    },\n    [authState.isLoggedIn],\n  );\n  return (\n    <StitchAuthContext.Provider value={authInfo}>\n      {props.children}\n    </StitchAuthContext.Provider>\n  );\n}\nStitchAuthProvider.propTypes = {\n  children: PropTypes.element,\n};\n","import React, { useEffect, useState } from 'react'\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport { scaleQuantile } from \"d3-scale\";\nimport {useGADM} from './GADMProvider';\nimport { useStitchAuth } from \"./StitchAuth\";\nimport ReactTooltip from \"react-tooltip\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport _ from 'lodash';\n\nconst geoUrl =\"https://raw.githubusercontent.com/deldersveld/topojson/master/countries/us-states/GA-13-georgia-counties.json\"\n\n\nexport default function GAMap(props) {\n  const [hover, setHover] = useState(0);\n  const [hoverCounty, setHoverCounty] = useState(\"Fulton County\");\n  const [toolTipVal, setToolTipVal] = useState(10.4);    // does not show variable\n  const {selectedVariable, \n    selectedTable,\n    selectedCounty, \n    fetchedData,\n    actions: {handlePageStateChange}} = useGADM();\n  // const colorPalette = [\n  //   \"#D8E7E9\",\n  //   \"#A4C8CB\",\n  //   \"#71A8AD\", \n  //   \"#4A7C82\",\n  //   \"#34575B\",\n  //   \"#253E41\"\n  // ];\n\n  // const colorPalette = [\n  //   \"#deebf7\",\n  //   \"#c6dbef\",\n  //   \"#9ecae1\",\n  //   \"#6baed6\",\n  //   \"#3182bd\",\n  //   \"#08519c\"\n  //   ];\n\n  const colorPalette = [\n    \"#D4E5F7\",\n    \"#85B2E0\",\n    \"#407FBF\",\n    \"#2966A3\",\n    \"#174C82\",\n    \"#0A335C\"\n    ];\n\n  const [mapColor, setMapColor] = useState(0);\n  const [legendSplit, setLegendSplit] = useState([]);\n  const [legendMin, setLegendMin] = useState();\n  const [legendMax, setLegendMax] = useState();\n\n  \n  useEffect(()=>{\n    var statedata = _.filter(fetchedData, {'subsubgroup': selectedVariable.varName});\n    var varData = _.map(statedata,'value');\n    varData = varData.filter((number)=> number!=='N/A');\n    setLegendMin(Math.min(...varData).toFixed(1));\n    setLegendMax(Math.max(...varData).toFixed(1));\n    const scaler = scaleQuantile().domain(varData).range(colorPalette);\n    let scaleMap = {};\n    _.forEach(statedata, item => {\n      scaleMap[item.county] = scaler(item.value)\n    });\n    setMapColor(scaleMap);\n    setLegendSplit(scaler.quantiles());\n  },[selectedVariable, fetchedData]);\n\n\n\n  const Legend = () => {\n    let MinVal;\n    let MaxVal;\n\n      if(legendMin>999999){\n        MinVal = <text x={40} y={35} style={{fontSize: '0.7em'}}>{(legendMin/1000000).toFixed(1) + \"M\"} </text>;\n      }else if(legendMin>999){\n        MinVal = <text x={40} y={35} style={{fontSize: '0.7em'}}>{(legendMin/1000).toFixed(1) + \"K\"} </text>;\n      }else{\n        MinVal = <text x={40} y={35} style={{fontSize: '0.7em'}}>{legendMin}</text>;\n      }\n  \n      if(legendMax>999999){\n        MaxVal = <text x={182} y={35} style={{fontSize: '0.7em'}}>{(legendMax/1000000).toFixed(1) + \"M\"} </text>;\n      }else if(legendMax>999){\n        MaxVal = <text x={182} y={35} style={{fontSize: '0.7em'}}>{(legendMax/1000).toFixed(1) + \"K\"} </text>;\n      }else{\n        MaxVal = <text x={182} y={35} style={{fontSize: '0.7em'}}>{legendMax}</text>;\n      }\n\n    if (Object.keys(mapColor).length>0) {\n      return (\n      <svg width=\"280\" height=\"80\" transform=\"translate(-10,-20)\"> \n      {/* transform=\"translate(-20,-60) */}\n        {_.map(legendSplit, (splitpoint, i) => {\n          if(legendSplit[i] < 1){\n            return <text key = {i} x={64 + 24 * (i)} y={35} style={{fontSize: '0.6em'}}> {legendSplit[i].toFixed(1)}</text>                    \n          }else if(legendSplit[i] > 999999){\n            return <text key = {i} x={64 + 24 * (i)} y={35} style={{fontSize: '0.6em'}}> {(legendSplit[i]/1000000).toFixed(1) + \"M\"}</text>                    \n          }else if(legendSplit[i] > 999){\n            return <text key = {i} x={64 + 24 * (i)} y={35} style={{fontSize: '0.6em'}}> {(legendSplit[i]/1000).toFixed(1) + \"K\"}</text>                    \n          }\n          return <text key = {i} x={64 + 24 * (i)} y={35} style={{fontSize: '0.6em'}}> {legendSplit[i].toFixed(1)}</text>                    \n        })}\n\n      {MinVal}\n      {MaxVal}\n        \n        {/* <text x={40} y={35} style={{fontSize: '0.7em'}}>{legendMin}</text>\n        <text x={182} y={35} style={{fontSize: '0.7em'}}>{legendMax}</text> */}\n        {_.map(colorPalette, (color, i) => {\n          return <rect key={i} x={50+24*i} y={40} width=\"22\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n        })} \n        <text x={42} y={74} style={{fontSize: '0.7em'}}>Low {selectedVariable.unit}</text>\n        <text x={80+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.7em'}}>High {selectedVariable.unit}</text>\n\n        <rect x={220} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n        <text x={245} y={48} style={{fontSize: '0.7em'}}> None </text>\n        <text x={245} y={58} style={{fontSize: '0.7em'}}> Reported </text>\n      </svg>);\n    } else {\n      return;\n    }\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    customSize: {\n      width: 130,\n      height: 50,\n      position: 'fixed',\n      top: '10px',\n      left: '-135px',\n      fontSize: '0.85rem',\n      padding: '0.7em'\n    },\n  }));\n\n  const classes = useStyles();\n\n  useEffect(()=>{\n    var ttval = _.map(_.filter(fetchedData, {'subsubgroup': selectedVariable.varName, 'county': hoverCounty}),'value');\n    if (ttval!== \"N/A\"){\n      var sp = (ttval + '').split('.');\n      if (sp[1]!==undefined && sp[1].length>2){\n        ttval = parseFloat(ttval).toFixed(2);\n      }\n    }\n    setToolTipVal(ttval);\n  },[hoverCounty, fetchedData, selectedVariable]);\n\n  if (fetchedData) {\n    return (\n      <div>  \n        <div>\n          {Legend()}\n        </div>\n        <Tooltip id='tooltip' placement=\"top-end\" open={hover>-1} classes={{ tooltip: classes.customSize }}\n          title={\n            <p>\n              {hoverCounty}<br/>\n              County stat: {toolTipVal}\n            </p>\n        }>\n        <div>\n        <ComposableMap \n          //projection=\"geoAlbersUsa\" \n          projection=\"geoTransverseMercator\"\n          data-tip=\"\"\n          width={560} \n          height={530}\n          strokeWidth= {0.5}\n          stroke= 'black'\n          projectionConfig={{scale: 5500}}\n          \n           >\n          <Geographies geography={geoUrl} transform=\"translate(50,-40)\">\n            { \n            ({ geographies }) => \n              <svg>\n                {geographies.map(geo => (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onClick={()=>{\n                      handlePageStateChange({selectedCounty: geo.properties});\n                    }}\n                    onMouseEnter={()=>{\n                      setHover(geo.properties.GEOID);\n                      setHoverCounty(geo.properties.NAME+\" County\");\n                    }}\n                    onMouseLeave={()=>{\n                      setHover(0);\n                      setHoverCounty(selectedCounty.NAME+\" County\");\n                    }}\n                    fill = {(hover===geo.properties.GEOID) ? '#f2a900':\n                      (mapColor[(geo.properties.NAME+\" County\")]===undefined)?'white':mapColor[(geo.properties.NAME+\" County\")]}\n                    strokeWidth = {selectedCounty.GEOID===geo.properties.GEOID ? 3.5:0.5}\n                    stroke = {selectedCounty.GEOID===geo.properties.GEOID ? '#da291c':'black'}\n                  />\n                )) }\n              </svg>\n            }\n          </Geographies>\n        </ComposableMap>\n        </div>\n        </Tooltip>\n      </div>\n      );\n  }\n}","import { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { app } from \"./app\";\n\n// TODO: Initialize a MongoDB Service Client\nconst mongoClient = app.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n);\n\n// TODO: Instantiate a collection handle for todo.items\nconst gatech = mongoClient.db(\"healthequity\").collection(\"gatech\");\n\nexport { gatech };\n","// React\nimport React, {useEffect, useState} from \"react\";\nimport GAMap from \"./GAMap\";\nimport {GADMProvider, useGADM} from './GADMProvider';\nimport { useStitchAuth } from \"./StitchAuth\";\nimport { \n  Container, \n  Grid, \n  Table,\n  Header,\n  Divider,\n  List,\n  Menu,\n  Dropdown,\n  Icon\n} from 'semantic-ui-react'\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport {gatech} from '../stitch/mongodb';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport ComposableMap from \"./ComposableMap\";\nimport { useForkRef } from \"@material-ui/core\";\n\n\nfunction DetTable(props){\n  const categories = _.map(props.categories,'cat');\n  const unit = _.map(props.categories,'unit');\n  const [count,setCount] = useState([]);\n  const [stateAvg,setStateAvg] = useState([]);\n  const {selectedCounty, \n    selectedTable,\n    selectedVariable,\n    fetchedData,\n    actions: {handlePageStateChange}} = useGADM();\n\n  const GetValue = () => {\n\n    const prom = fetchedData;\n    //county stats\n    var countArray = _.sortBy(_.filter(_.reject(fetchedData,['subsubgroup','% Diabetes in Medicaid Population']),{'subgroup': selectedTable.qryName,'county': selectedCounty.NAME+\" County\"}),['subsubgroup']);\n    setCount(countArray);\n    console.log(\"count \",countArray);\n    \n    //state avg stats\n    const byGroup = _.sortBy(_.groupBy(_.filter(_.reject(fetchedData,['subsubgroup','% Diabetes in Medicaid Population']),{'subgroup': selectedTable.qryName}),'subsubgroup'),['subsubgroup']);  // sets of subsubgroup; by table; sorted here i guess\n    var i1;\n    var resultArray = [];\n    for (i1 in byGroup){   // each subsubgroup,length 159\n      var mean = _.meanBy(_.reject(byGroup[i1],['value','N/A']),function(o){return o.value;});\n      resultArray.push(mean.toFixed(1));\n    }\n    console.log(\"avg \", resultArray);\n    setStateAvg(resultArray);\n  };\n  \n  useEffect(()=>{\n      GetValue();\n  }, [selectedCounty, selectedTable, fetchedData]);\n\n\n  const zipped = count.map((obj,index) =>{\n    var val;   //deal with na\n    if (obj.value!== \"N/A\"){\n      var sp = (obj.value + '').split('.');\n      if (sp[1]!==undefined && sp[1].length>2){\n        val = obj.value.toFixed(2);\n      }else{\n        val = obj.value;\n      }\n    } else {\n      val = obj.value;\n    }  \n    return(\n    <Table.Row key={index}\n              onClick={()=>{\n                handlePageStateChange({selectedVariable: {varName:obj.subsubgroup,\n                                                    printName:categories[index],\n                                                    unit: unit[index]},\n                                                    });}}\n                active = {selectedVariable.printName === categories[index]}\n                >\n      <Table.Cell style={{fontSize: '0.9em',verticalAlign:\"middle\",textAlign:\"left\", paddingLeft:'0.5em'}}>{categories[index]}</Table.Cell>\n      <Table.Cell style={{fontSize: '0.9em',verticalAlign:\"middle\",textAlign:\"center\", paddingLeft:'0.2em',paddingRight:'0.2em'}}>{val}</Table.Cell>    \n      <Table.Cell style={{fontSize: '0.9em',verticalAlign:\"middle\",textAlign:\"center\", paddingLeft:'0.2em',paddingRight:'0.2em'}}>{stateAvg[index]}</Table.Cell>            \n    </Table.Row>);\n  });\n\n\n    return (\n    <Table.Body>{zipped}</Table.Body>\n  );\n}\n\n\nfunction MenuButton() {\n  const {selectedTable,\n        selectedVariable,\n        fetchedData,\n        actions: {handlePageStateChange}} = useGADM();\n  const getOptions = (tableName) =>{    // determines the printname\n    if (tableName===\"Demographic Composition\") {\n      return([{key:1, text:\"% of 65 y or older\", value:\"65 yrs or older\"},\n                                    {key:2, text:\"% Black/African American\",value:\"Black\"},\n                                    {key:3, text:\"% Asian\",value:3},\n                                    {key:4, text:\"% Foreign born\",value:4},\n                                    {key:5, text:\"% Hispanic\",value:5},\n                                    {key:6, text:\"Median age (y)\",value:6},\n                                    {key:7, text:\"Total Population, thousands\", value:7},\n                                    {key:8, text:\"% Women\",value:8}]);\n    }\n    if (tableName===\"Cardiometabolic disease morbidity\") {\n      return([{key:1, text:\"% CHD Prevalence in Medicaid population\",value:1},\n      {key:2, text:\"% with Diabetes\",value:2},\n      {key:3, text:\"% with Hypertension in Medicaid population\",value:3},\n      {key:4, text:\"Newly diagnosed diabetes (new cases per 1,000)\",value:4},\n      {key:5, text:\"% Obese\",value:5}]);\n    }\n    if (tableName===\"Clinical events\") {\n      return([{key:1, text:\"CVD deaths per 100,000\",value:1},\n      {key:2, text:\"CVD hospitalizations per 100,000\",value:2},\n      {key:3, text:\"Diabetes deaths per 100,000\",value:3},\n      {key:4, text:\"Diabetes hospitalizations per 100,000\",value:4},\n      {key:5, text:\"Kidney hospitalizations per 100,000\",value:5}]);\n    }\n    if (tableName===\"Lifestyle Related Risk Factors\"){\n      return([{key:1, text:\"% Excessive drinkers\",value:1},\n      {key:2, text:\"% Physical inactive\",value:2},\n      {key:3, text:\"% Insufficient sleep (<7 hours)\",value:3},\n      {key:4, text:\"% Current Smokers\",value:4}]);\n    }\n    if (tableName===\"Healthcare\"){\n      return([\n        // \"% Diabetes Screening\",\n        {key:1, text:\"Cardiologists\",value:1},\n        {key:2, text:\"Endocrinologists\",value:2},\n        {key:3, text:\"Primary care doctors (ratio of population to primary care physicians)\",value:3},\n        {key:4, text:\"% Uninsured\",value:4}]);\n    }\n    if (tableName===\"Socioeconomic Factors\") {\n      return([{key:1, text:\"% Graduates high school in 4 years\",value:1},\n      {key:2, text:\"% In poverty\",value:2},\n      {key:3, text:\"Income Inequality\",value:3},\n      {key:4, text:\"Median income ($)\",value:4},\n      {key:5, text:\"% Unemployed\",value:5}]);\n    }\n    if (tableName===\"Environmental Factors\") {\n      return([{key:1, text:\"% Exercise opportunities\",value:1},\n      {key:2, text:\"Food environment index\",value:2},\n      {key:3, text:\"Residential segregation score\",value:3},\n      {key:4, text:\"% Severe housing problems\",value:4}]);\n    }\n  }\n\n  const [qryname, setQryname] = useState();\n  \n  useEffect(()=>{\n  const qry = _.groupBy(_.sortBy(_.filter(_.reject(fetchedData,['subsubgroup','% Diabetes in Medicaid Population']), {'subgroup': selectedTable.qryName}),'subsubgroup'),'subsubgroup');\n  setQryname(Object.keys(qry))\n  },[selectedTable]);\n  \n  const RowCat = () =>{    // determines the printname\n    if (selectedTable.tableName===\"Demographic Composition\") {\n      return([{'cat':\"% of 65 y or older\", 'unit':'(%)'},\n                                    {'cat':\"% Black/African American\",'unit':'(%)'},\n                                    {'cat':\"% Asian\",'unit':'(%)'},\n                                    {'cat':\"% Foreign born\",'unit':'(%)'},\n                                    {'cat':\"% Hispanic\",'unit':'(%)'},\n                                    {'cat':\"Median age (y)\",\"unit\":'(y)'},\n                                    {'cat':\"Total Population, thousands\", \"unit\":'(K)'},\n                                    {'cat':\"% Women\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Cardiometabolic disease morbidity\") {\n      return([{'cat':\"% CHD Prevalence in Medicaid population\",'unit':'(%)'},\n      {'cat':\"% with Diabetes\",'unit':'(%)'},\n      {'cat':\"% with Hypertension in Medicaid population\",'unit':'(%)'},\n      {'cat':\"Newly diagnosed diabetes (new cases per 1,000)\",'unit':'(per K)'},\n      {'cat':\"% Obese\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Clinical events\") {\n      return([{'cat':\"CVD deaths per 100,000\",'unit':'(per M)'},\n      {'cat':\"CVD hospitalizations per 100,000\",'unit':'(per M)'},\n      {'cat':\"Diabetes deaths per 100,000\",'unit':'(per M)'},\n      {'cat':\"Diabetes hospitalizations per 100,000\",'unit':'(per M)'},\n      {'cat':\"Kidney hospitalizations per 100,000\",'unit':'(per M)'}]);\n    }\n    if (selectedTable.qryName===\"Lifestyle Related Risk Factors\"){\n      return([{'cat':\"% Excessive drinkers\",'unit':'(%)'},\n      {'cat':\"% Physical inactive\",'unit':'(%)'},\n      {'cat':\"% Insufficient sleep (<7 hours)\",'unit':'(%)'},\n      {'cat':\"% Current Smokers\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Healthcare\"){\n      return([\n        // \"% Diabetes Screening\",\n        {'cat':\"Cardiologists\",'unit':''},\n        {'cat':\"Endocrinologists\",'unit':''},\n        {'cat':\"Primary care doctors (ratio of population to primary care physicians)\",'unit':''},\n        {'cat':\"% Uninsured\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Socioeconomic Factors\") {\n      return([{'cat':\"% Graduates high school in 4 years\",'unit':'(%)'},\n      {'cat':\"% In poverty\",'unit':'(%)'},\n      {'cat':\"Income Inequality\",'unit':''},\n      {'cat':\"Median income ($)\",'unit':'($)'},\n      {'cat':\"% Unemployed\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Environmental Factors\") {\n      return([{'cat':\"% Exercise opportunities\",'unit':'(%)'},\n      {'cat':\"Food environment index\",'unit':''},\n      {'cat':\"Residential segregation score\",'unit':''},\n      {'cat':\"% Severe housing problems\",'unit':'(%)'}]);\n    }\n  }\n  \n  const categories = RowCat();\n  const item = categories.map((obj,index)=>\n  <Dropdown.Item key={index} active={selectedVariable.printName === obj.cat} onMouseDown={()=>{\n    handlePageStateChange({selectedVariable: {varName:qryname[index],\n                                        printName:obj.cat,\n                                        unit: obj.unit},\n                                        });}}>{obj.cat}</Dropdown.Item>\n                          )\n\n  console.log(\"var \", selectedVariable.printName)\n  console.log(\"cat \", categories)\n  // useEffect(()=>{},[]);\n\n  return(\n    <Grid.Column>  \n      <Menu vertical tabular style={{width:'96%', fontSize:'0.9rem', verticalAlign: \"middle\"}}>\n    <Dropdown item openOnFocus={false} pointing='left' closeOnBlur text='Demographic Composition' style={{lineHeight:'1.3em', height: '4rem'}}\n                direction = 'right'\n                active = {(selectedTable.tableName==='Demographic Composition').toString()}\n                onClick={()=>{\n                  handlePageStateChange({selectedTable: {tableName:'Demographic Composition',\n                                                        qryName:'Demographic Composition'}});\n            }}>\n      <Dropdown.Menu>{item}</Dropdown.Menu>\n    </Dropdown>\n    <Dropdown item closeOnBlur openOnFocus={false} pointing='left' closeOnBlur text='Cardiometabolic Disease Morbidity' style={{lineHeight:'1.3em', height: '4rem'}} \n                active = {(selectedTable.tableName==='Cardiometabolic Disease Morbidity').toString()}\n                onClick={()=>{\n                      handlePageStateChange({selectedTable: {tableName:'Cardiometabolic Disease Morbidity',\n                                                            qryName:'Cardiometabolic disease morbidity'}});\n            }}>\n         <Dropdown.Menu>{item}</Dropdown.Menu>\n    </Dropdown>\n    <Dropdown item closeOnBlur openOnFocus={false} pointing='left' closeOnBlur text='Clinical Events' style={{lineHeight:'2.2rem', height: '4rem'}}\n                active = {(selectedTable.tableName==='Clinical Events').toString()}\n                onClick={()=>{\n                      handlePageStateChange({selectedTable: {tableName:'Clinical Events',\n                                                            qryName:'Clinical events'}});\n            }}>\n      <Dropdown.Menu>{item}</Dropdown.Menu>\n    </Dropdown> \n    <Dropdown item closeOnBlur openOnFocus={false} pointing='left' closeOnBlur text='Lifestyle Related Risk Factors' style={{lineHeight:'1.3em', height: '4rem'}}\n                active = {(selectedTable.tableName==='Lifestyle Related Risk Factors').toString()}\n                onClick={()=>{\n                      handlePageStateChange({selectedTable: {tableName:'Lifestyle Related Risk Factors',\n                                                            qryName:'Lifestyle Related Risk Factors'}});\n            }}>\n      <Dropdown.Menu>{item}</Dropdown.Menu>\n      </Dropdown>\n      <Dropdown item closeOnBlur openOnFocus={false} pointing='left' closeOnBlur text='Health Care' style={{lineHeight:'2.2em', height: '4rem'}}\n                active = {(selectedTable.tableName==='Healthcare').toString()}\n                onClick={()=>{\n                      handlePageStateChange({selectedTable: {tableName:'Healthcare',\n                                                            qryName:'Healthcare'}});\n            }}>\n        <Dropdown.Menu>{item}</Dropdown.Menu>\n      </Dropdown>\n      <Dropdown item closeOnBlur openOnFocus={false} pointing='left' closeOnBlur text='Socioeconomic Factors' style={{lineHeight:'1.3em', height: '4rem'}}\n                active = {(selectedTable.tableName==='Socioeconomic Factors').toString()}\n                onClick={()=>{\n                    handlePageStateChange({selectedTable: {tableName:'Socioeconomic Factors',\n                                                          qryName:'Socioeconomic Factors'}});\n            }}>\n        <Dropdown.Menu>{item}</Dropdown.Menu>\n      </Dropdown>\n      <Dropdown item closeOnBlur openOnFocus={false} pointing='left' closeOnBlur text='Environmental Factors' style={{lineHeight:'1.3em', height: '4rem'}} \n                active = {(selectedTable.tableName==='Environmental Factors').toString()}\n                onClick={()=>{\n                    handlePageStateChange({selectedTable: {tableName:'Environmental Factors',\n                                                          qryName:'Environmental Factors'}});\n            }}>\n        <Dropdown.Menu>{item}</Dropdown.Menu>\n        </Dropdown>\n\n  </Menu>\n    </Grid.Column>\n  )\n}\n\nfunction MenuPanel() {\n  const {fetchedData} = useGADM()\n  \n  if(fetchedData){\n  return (\n  <Grid>\n  <Grid.Row>\n    <Header as='h4' style={{fontWeight: 300, color:'#da291c', paddingLeft:'3em', paddingTop: '0.1rem'}}><i><b>Select an indicator</b></i></Header>\n  </Grid.Row>\n  <Grid.Row style={{paddingTop: '0.5rem',paddingLeft:'1.5rem', width:'95%', textAlign:'left', display: fetchedData!='undefined' ? \"block\": \"none\"}}>\n    <MenuButton/>\n  </Grid.Row>\n  </Grid>\n  )}\n}\n\nfunction DataPanel() {\n  const {isLoggedIn} = useStitchAuth();\n  const [desc,setDesc] = useState();\n  const [source,setSource] = useState();\n\n  const {selectedTable,\n    selectedVariable, \n    selectedCounty, \n    fetchedData,\n    actions: {handlePageStateChange}} = useGADM();\n\n  const fetchData = async()=> {\n    const prom = await gatech.find({},{projection:{\"subgroup\":1,\"subsubgroup\":1,\"value\":1,\"county\":1,\"desc\":1,\"source\":1}}).toArray();\n    handlePageStateChange({fetchedData:prom});\n  }\n\n  useEffect(()=>{\n    if (isLoggedIn === true){\n      fetchData();\n    }\n  },[]);\n\n  useEffect(()=>{\n    var desc = _.map(_.filter(fetchedData,{'subsubgroup':selectedVariable.varName,'county':'Fulton County'}),'desc');\n    setDesc(desc);\n    var source = _.map(_.filter(fetchedData,{'subsubgroup':selectedVariable.varName,'county':'Fulton County'}),'source');\n    setSource(source);\n  },[selectedVariable,fetchedData]);\n\n\n  const RowCat = () =>{    // determines the printname\n    if (selectedTable.tableName===\"Demographic Composition\") {\n      return([{'cat':\"% of 65 y or older\", 'unit':'(%)'},\n                                    {'cat':\"% Black/African American\",'unit':'(%)'},\n                                    {'cat':\"% Asian\",'unit':'(%)'},\n                                    {'cat':\"% Foreign born\",'unit':'(%)'},\n                                    {'cat':\"% Hispanic\",'unit':'(%)'},\n                                    {'cat':\"Median age (y)\",\"unit\":'(y)'},\n                                    {'cat':\"Total Population, thousands\", \"unit\":'(K)'},\n                                    {'cat':\"% Women\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Cardiometabolic disease morbidity\") {\n      return([{'cat':\"% CHD Prevalence in Medicaid population\",'unit':'(%)'},\n      {'cat':\"% with Diabetes\",'unit':'(%)'},\n      {'cat':\"% with Hypertension in Medicaid population\",'unit':'(%)'},\n      {'cat':\"Newly diagnosed diabetes (new cases per 1,000)\",'unit':'(per K)'},\n      {'cat':\"% Obese\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Clinical events\") {\n      return([{'cat':\"CVD deaths per 100,000\",'unit':'(per M)'},\n      {'cat':\"CVD hospitalizations per 100,000\",'unit':'(per M)'},\n      {'cat':\"Diabetes deaths per 100,000\",'unit':'(per M)'},\n      {'cat':\"Diabetes hospitalizations per 100,000\",'unit':'(per M)'},\n      {'cat':\"Kidney hospitalizations per 100,000\",'unit':'(per M)'}]);\n    }\n    if (selectedTable.qryName===\"Lifestyle Related Risk Factors\"){\n      return([{'cat':\"% Excessive drinkers\",'unit':'(%)'},\n      {'cat':\"% Physical inactive\",'unit':'(%)'},\n      {'cat':\"% Insufficient sleep (<7 hours)\",'unit':'(%)'},\n      {'cat':\"% Current Smokers\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Healthcare\"){\n      return([\n        // \"% Diabetes Screening\",\n        {'cat':\"Cardiologists\",'unit':''},\n        {'cat':\"Endocrinologists\",'unit':''},\n        {'cat':\"Primary care doctors (ratio of population to primary care physicians)\",'unit':''},\n        {'cat':\"% Uninsured\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Socioeconomic Factors\") {\n      return([{'cat':\"% Graduates high school in 4 years\",'unit':'(%)'},\n      {'cat':\"% In poverty\",'unit':'(%)'},\n      {'cat':\"Income Inequality\",'unit':''},\n      {'cat':\"Median income ($)\",'unit':'($)'},\n      {'cat':\"% Unemployed\",'unit':'(%)'}]);\n    }\n    if (selectedTable.qryName===\"Environmental Factors\") {\n      return([{'cat':\"% Exercise opportunities\",'unit':'(%)'},\n      {'cat':\"Food environment index\",'unit':''},\n      {'cat':\"Residential segregation score\",'unit':''},\n      {'cat':\"% Severe housing problems\",'unit':'(%)'}]);\n    }\n  }\n\n  if(fetchedData){\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column style={{paddingLeft:'3rem'}}>\n          <Header as='h3' style={{fontWeight: 300}}>\n            Characteristics of {selectedCounty.NAME} County\n            <Header.Subheader style={{fontWeight: 300}}>\n              The table below show diabetes-related health determinants of {selectedCounty.NAME} county.\n            </Header.Subheader>\n          </Header>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row columns={1}>\n        {/* <Grid.Column textAlign=\"left\" style={{paddingTop: '1em', paddingLeft:'4em'}}> */}\n          <Grid.Row>\n            <Header as='h4' style={{fontWeight: 300, color:'#da291c', paddingLeft:'5em'}}><i><b>Select a category of county characteristics for display</b></i></Header>\n          </Grid.Row>\n          {/* <Grid.Row style={{paddingTop: '1.2em', width:'95%'}}>\n            <MenuButton/>\n          </Grid.Row> */}\n        {/* </Grid.Column> */}\n        <Grid.Column style={{paddingTop: '2.4em',paddingLeft:'6rem',textAlign:\"center\", height:'33rem'}}>\n          {/* <Grid.Row> */}\n          <Header block as='h4' style={{fontWeight: 550, width:'20rem', backgroundColor:'#012169',color:'whitesmoke', verticalAlign:'center',paddingTop:'0.4em',paddingBottom:'0.4em',border:'0',borderRadius:'0.6em 0em 0.6em 0em'}}>\n          {/* style={{fontWeight: 550, color:'#012169',verticalAlign:'center',margin:'0em',paddingTop:'0.4em',paddingBottom:'0.4em',border:'0',borderRadius:'0.6em 0em 0.6em 0em'}}  */}\n            {selectedTable.tableName}\n          </Header>\n          {/* </Grid.Row> */}\n          <Table selectable basic='very' fixed style={{width:'20rem'}}>    \n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell style={{borderTop: 0, fontWeight:500,textAlign:\"center\", width:'50%'}}>Characteristic</Table.HeaderCell>\n                <Table.HeaderCell style={{borderTop: 0, fontWeight:500,textAlign:\"center\", width:'27%', paddingLeft:'0',paddingRight:'0'}}>County Stat</Table.HeaderCell>\n                <Table.HeaderCell style={{borderTop: 0, fontWeight:500,textAlign:\"center\", width:'25%'}}>State Mean</Table.HeaderCell>                                \n              </Table.Row>\n            </Table.Header>\n            <DetTable categories={RowCat()} />\n          </Table>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column style={{paddingLeft: '5em',fontSize:'0.9rem', textAlign:\"left\"}}>\n          <b>Description: </b>{desc}<br/>\n          <b>Source: </b>{source}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );}\n}\n\nfunction MapPanel() {\n  const {selectedVariable, \n    selectedCounty, \n    fetchedData,\n    actions: {handlePageStateChange}} = useGADM();\n\nif(fetchedData){\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column>\n          <Header as='h3' style={{fontWeight: 600, paddingLeft:'1rem', height:'3em',color:'#b58500'}}>\n            {selectedVariable.printName}\n            <Header.Subheader style={{fontWeight: 300, margin:'0em',paddingLeft:'0rem'}}>\n              The color shows the distribution of {selectedVariable.printName} across the Georgia counties.\n            </Header.Subheader>\n          </Header>\n          <Header as='h4' style={{fontWeight: 300, paddingTop:'0em', paddingLeft:'4em', paddingBottom:'-1em', textAlign:'left',color:'#da291c'}}>\n            <i><b>Select a county to see detailed characteristics</b></i>\n          </Header>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{padding:'0'}}>\n        <Grid.Column>\n          <GAMap />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    );}\n\n}\n\nexport default function GADiabetes() {\n  const [Warning, setWarning] = useState(false);\n  const [userWidth, setUserWidth] = useState(0);\n  \n  let wid = 0;\n  useEffect(()=>{\n    var d = document, root= d.documentElement, body= d.body;\n    wid = window.innerWidth || root.clientWidth || body.clientWidth;\n    setUserWidth(wid);\n    if (wid<1200){\n      setWarning(true);\n    }\n  },[userWidth, window.innerWidth]\n  )\n  console.log(userWidth);\n\n\n  return (\n    <GADMProvider>\n      <Container>\n        <Grid style={{paddingTop: '2em'}}>\n          <Grid.Row centered columns={1}\n          style={{ background: 'linear-gradient(to bottom, #0c2340, #012169)', height: '6rem'}}>\n            {/* style={{ backgroundImage: `url(${require(\"../bg2.jpg\")})`}} `#d9d9d6` backgroundColor: `#012169`*/}\n            <Grid.Column textAlign=\"center\">\n              <Header as='h1' style={{fontWeight: 500,color:'whitesmoke'}}>\n                Georgia Diabetes Data Portal\n                <Header.Subheader style={{fontWeight: 300,color:'whitesmoke'}}>\n                  Interactive Dashboard of Diabetes-Related Health Determinants\n                </Header.Subheader>\n              </Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n              <Header as='h4' style={{fontWeight: 600, paddingLeft: '5rem', paddingTop: '1rem'}}>\n                A Quick User Guide:\n              </Header>\n              <List style={{fontWeight: 400, color:'black', paddingTop: '2rem'}} size=\"small\">   \n              {/* bulleted */}\n                {/* <List.Item> */}\n                  <Icon name='hand point right outline' /> Click on a characteristic on the table located <i>on the right</i> to see the county-level distribution on the map <i>on the left</i>. <br />\n                {/* </List.Item> */}\n                {/* <List.Item> */}\n                  <Icon name='hand point right outline' /> Click on a county on the map located <i>on the left</i> to see its full characteristics on the table <i>on the right</i>.\n                {/* </List.Item>                 */}\n              </List>\n          </Grid.Row>\n          <Divider/>\n          <Grid.Row centered columns={3} style={{ display: Warning ? \"none\" : \"block\", paddingTop:'2em' }}>\n            <Grid.Column width={3} textAlign=\"center\">  \n              <MenuPanel />\n            </Grid.Column>\n            <Grid.Column width={7} textAlign=\"center\">\n              <MapPanel />\n            </Grid.Column>\n            <Grid.Column width={6} textAlign=\"center\">  \n              <DataPanel />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row style={{ display: Warning ? \"block\" : \"none\", textAlign:\"left\", color:\"red\", paddingTop:'4em',paddingLeft:'2em'}}>\n            <Grid.Column>\n              {/* <List>\n                <List.Item>Warning</List.Item>\n                <List.Item style={{fontSize:'0.8em'}}>Please expand your browser window and refresh the page to view the content.</List.Item>\n                <List.Item style={{fontSize:'0.8em'}}>If you are using a mobile device, please use a PC to visit this page.</List.Item>\n              </List> */}\n              <Alert severity=\"error\">\n                <AlertTitle style={{fontSize: '1.3rem'}}>Warning</AlertTitle>\n                Please expand your browser window and refresh the page to view the content.\n                If you are using a mobile device, please use a PC to visit this page.\n              </Alert>\n              </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </GADMProvider>\n  );\n}","// React\nimport React, {useEffect, } from \"react\";\n// Components & Hooks\nimport GADiabetes from \"./GADiabetes\";\nimport { StitchAuthProvider, useStitchAuth } from \"./StitchAuth\";\nimport 'semantic-ui-css/semantic.min.css'\nimport '../styles.css'\n\nApp.propTypes = {};\nexport default function App() {\n  return (\n    <StitchAuthProvider>\n      <AppUI />\n    </StitchAuthProvider>\n  );\n}\n\nAppUI.propTypes = {};\nfunction AppUI() {\n  const {\n    isLoggedIn,\n    actions: { handleLogout, handleAnonymousLogin },\n  } = useStitchAuth();\n\n  useEffect(()=>{\n    handleAnonymousLogin();\n  }, []);\n\n  return <GADiabetes/>;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}